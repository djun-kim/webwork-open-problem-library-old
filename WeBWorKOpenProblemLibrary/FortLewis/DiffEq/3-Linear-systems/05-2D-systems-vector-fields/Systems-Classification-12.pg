## DESCRIPTION
## Eigenvalues and systems of differential equations
## ENDDESCRIPTION

## KEYWORDS ('linear algebra','matrix','eigenvalue','eigenvector','systems','systems of differential equations')

## DBsubject('Calculus')
## DBchapter('Differential Equations')
## DBsection('Systems of Differential Equations')
## Date('03/19/2011')
## Author('Paul Pearson')
## Institution('Fort Lewis College')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')


##################################
#  Initialization


DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGmatrixmacros.pl",
"MathObjects.pl",
"parserMultiAnswer.pl",
"MatrixUnimodular.pl",
"unionLists.pl",
"parserRadioButtons.pl",
"weightedGrader.pl",
);

TEXT(beginproblem());

install_weighted_grader();

##################################
#  Setup

Context("Numeric");
Context()->variables->add(
't'=>'Real',
'c1'=>'Real',
'c2'=>'Real',
);

SRAND($psvn);


$lambda1 = random(-5,-2,1);
do { $lambda2 = random(-4,-1,1); } until ($lambda1 < $lambda2);

$radio = RadioButtons(
  ["source / unstable node","sink / stable node","saddle","center point / ellipses","spiral source","spiral sink","none of these"],
  "sink / stable node", # correct answer
  last => ["none of these"], # can be a list
);



@M = small_unimodular_diagonalization_GL2Z($lambda1,$lambda2);

$A = new Matrix(2,2);
$A->assign(1,1, $M[0]);
$A->assign(2,1, $M[1]);
$A->assign(1,2, $M[2]);
$A->assign(2,2, $M[3]);


$multians1 = MultiAnswer($lambda1, $M[4], $M[5], $lambda2, $M[6], $M[7])->with(

    singleResult => 1,
    checkTypes => 0,
    allowBlankAnswers => 1,
    format =>  
    "<table border='0' cellspacing='0'>
    <tr>
      <td> %s, </td>
      <td><table border='0' cellspacing='5'><tr><td> %s </td></tr><tr><td> %s </td></tr></table></td>
      <td>&nbsp;&nbsp; %s,</td>
      <td><table border='0' cellspacing='5'><tr><td> %s </td></tr><tr><td> %s </td></tr></table></td>
    </tr>
    </table>",
    tex_format =>  
    "%s, \left\lbrack \begin{array}{r} %s \\ %s \end{array}\right\rbrack; \ \ 
     %s, \left\lbrack \begin{array}{r} %s \\ %s \end{array}\right\rbrack",

    checker => sub {
        my ($correct, $student, $answerHash ) = @_;
        my @c = @{$correct};
	my @s = @{$student};

        $flag1 = 0;
        $flag2 = 0;
        $flag  = 0;

        Value::Error("Your vectors are parallel") if
        $c[1]->typeMatch($s[1]) &&
        $c[2]->typeMatch($s[2]) &&
        $c[4]->typeMatch($s[4]) &&
        $c[5]->typeMatch($s[5]) &&
        ($s[1] * $s[5] == $s[2] * $s[4]);
        
        if ( $c[0]->typeMatch($s[0]) && 
             $c[1]->typeMatch($s[1]) && 
             $c[2]->typeMatch($s[2]) && 
             ($s[1] != 0 || $s[2] != 0) ) 
        {
          if ( ($M[0] * $s[1] + $M[2] * $s[2] == $s[0] * $s[1]) &&
               ($M[1] * $s[1] + $M[3] * $s[2] == $s[0] * $s[2]) 
          ){
                $flag1=1;
          }
        }

        if ( $c[3]->typeMatch($s[3]) && 
             $c[4]->typeMatch($s[4]) && 
             $c[5]->typeMatch($s[5]) && 
             ($s[4] != 0 || $s[5] != 0) ) 
        {
          if ( ($M[0] * $s[4] + $M[2] * $s[5] == $s[3] * $s[4]) &&
               ($M[1] * $s[4] + $M[3] * $s[5] == $s[3] * $s[5]) 
          ){
                $flag2=1;
          }
        }

        if($flag1==1 && $flag2 ==1){
           $flag=1;
        }else{
           if ($flag1 == 1) {
              Value::Error("The eigenpair { lambda1, v1 } is correct");
           } elsif ($flag2 == 1) {
              Value::Error("The eigenpair { lambda2, v2 } is correct");
           }else{
              Value::Error("Neither of the eigenpairs is correct");
           }
        }
        return $flag; 
       
    }
);




$x1 = Compute("$M[4] c1 e^($lambda1 t) + $M[6] c2 e^($lambda2 t)");
$x2 = Compute("$M[5] c1 e^($lambda1 t) + $M[7] c2 e^($lambda2 t)");


$gensolution = MultiAnswer($x1, $x2)->with(

    singleResult => 1,
    checkTypes => 0,
    allowBlankAnswers => 1,
    format =>  
    "<table border='0' cellspacing='0'>
    <tr><td>x<sub>1</sub>(t) = %s</td></tr>
    <tr><td>x<sub>2</sub>(t) = %s</td></tr>
    </table>",
    tex_format =>  
    "\begin{array}{l} 
    x_1(t) = %s \\ 
    x_2(t) = %s 
    \end{array}",

    checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};

      if ( !$c[0]->typeMatch($s[0]) || !$c[1]->typeMatch($s[1]) ) {
           Value::Error("<b>You must enter both x<sub>1</sub>(t) and x<sub>2</sub>(t)</b>");
      }

      if (    $c[0]->typeMatch($s[0]) && $s[0] != Formula(0) && $s[0]->isFormula
           && $c[1]->typeMatch($s[1]) && $s[1] != Formula(0) && $s[1]->isFormula
           && (    $s[0]->D('c1') == Formula(0) || $s[1]->D('c1') == Formula(0)
                || $s[0]->D('c2') == Formula(0) || $s[1]->D('c2') == Formula(0)
              )
         ) 
      { Value::Error("Don't forget the constants c1 and c2"); } 

 
      if (    $c[0]->typeMatch($s[0]) && $s[0] != Formula(0) && $s[0]->isFormula
           && $c[1]->typeMatch($s[1]) && $s[1] != Formula(0) && $s[1]->isFormula
           && $s[0]->D('c1') != Formula(0) 
           && $s[1]->D('c1') != Formula(0)
           && $s[0]->D('c2') != Formula(0)
           && $s[1]->D('c2') != Formula(0)
           && $M[0] * $s[0] + $M[2] * $s[1] == $s[0]->D('t')
           && $M[1] * $s[0] + $M[3] * $s[1] == $s[1]->D('t')
         ) 
      { return 1; } else { return 0; }

    }
);




#######################################
#  Main text

Context()->texStrings;
BEGIN_TEXT
\{ BeginList('OL',type=>'a') \}

$ITEM
Find the eigenvalues and corresponding eigenvectors 
for the matrix 
\(
\displaystyle
P =
\left\lbrack
\begin{array}{rr}
$M[0] & $M[2] \\
$M[1] & $M[3]
\end{array} 
\right\rbrack.
\)
$BCENTER
\{ 
mbox(
[
'\( \lambda_1 = \) ',
$multians1->ans_rule(5),
', \( \boldsymbol{\vec{v}_1} =  \) ', 
display_matrix([[$multians1->ans_rule(5)],[$multians1->ans_rule(5)]]),
', and \( \lambda_2 = \) ',
$multians1->ans_rule(5),
', \( \boldsymbol{\vec{v}_2} =  \) ', 
display_matrix([[$multians1->ans_rule(5)],[$multians1->ans_rule(5)]]),
],
allowbreaks=>'yes'
) 
\}
$ECENTER


$ITEMSEP
$ITEM
Find the most general solution to the linear system of 
differential equations \( \boldsymbol{\vec{x}^{\, \prime}} = P \boldsymbol{\vec{x}} \). 
Use \( c_1 \) and \( c_2 \) to denote arbitrary constants, and enter them as ${BTT}c1${ETT}
and ${BTT}c2${ETT}.
$BR
$BR
\( x_1(t) = \) \{ $gensolution->ans_rule(40) \}
$BR
\( x_2(t) = \) \{ $gensolution->ans_rule(40) \}

$ITEMSEP
$ITEM The behavior of this system is best described as
$BR
\{ $radio->buttons() \}

\{ EndList('OL') \}
END_TEXT
Context()->normalStrings;


###################################
#  Answer evaluation

WEIGHTED_ANS( $multians1->cmp(), 50 );
WEIGHTED_ANS( $gensolution->cmp(), 45 );
WEIGHTED_ANS( $radio->cmp(), 5 );

COMMENT('MathObject version.  Distinct negative integer eigenvalues.');

ENDDOCUMENT();
