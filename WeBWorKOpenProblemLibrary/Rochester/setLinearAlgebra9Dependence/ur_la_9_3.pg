## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS ('linear algebra','vector space','independent','dependent')
## Tagged by cmd6a 4/29/06

## DBsubject('Linear Algebra')
## DBchapter('Vector Spaces')
## DBsection('Bases')
## Date('')
## Author('')
## Institution('Rochester')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGgraphmacros.pl",
           "PGnumericalmacros.pl",
           "PGmatrixmacros.pl",
           "parserMultiAnswer.pl",
);


TEXT(beginproblem());

$showPartialCorrectAnswers = 1;

$flip = random(0,1,1);  # choose between dependent and independent vectors
$lambda = new Matrix(4,1);
# we'll scramble the vectors and coefficients
@slice = NchooseK(4,4);

$v01 = non_zero_random(-3,3,1);
$v02 = random(-5,5,1);
$v03 = non_zero_random(-3,3,1);
$v04 = non_zero_random(-3,3,1);
 
$vec[$slice[0]] = Matrix->new_column_matrix([$v01, $v02, $v03, $v04]);

$mult = non_zero_random(-2,2,1);
$d1 = non_zero_random(-3,3,1);
$d2 = non_zero_random(-3,3,1);
$d3 = random(-3,3,1);

$v11 = $mult*$v01;
$v12 = $mult*$v02+$d1;
$v13 = $mult*$v03+$d2;
$v14 = $mult*$v04+$d3;

$vec[$slice[1]] = Matrix->new_column_matrix([ $v11, $v12, $v13, $v14 ]);

$mult1 = non_zero_random(-2,2,1);
$mult2 = random(-1,1,2);
$d4 = non_zero_random(-3,3,1);
$d5 = random(-3,3,1);

$v21 = $mult1*$v01+$mult2*$v11;
$v22 = $mult1*$v02+$mult2*$v12;
$v23 = $mult1*$v03+$mult2*$v13+$d4;
$v24 = $mult1*$v04+$mult2*$v14+$d5;

$vec[$slice[2]] = Matrix->new_column_matrix([ $v21, $v22, $v23, $v24 ]);
if ($flip==0) {
	$mult3 = random(-2,2,1);
	$mult4 = random(-1,1,1);
	$mult5 = random(-1,1,1);
	$d6 = non_zero_random(-2,2,1);
		$v31 = $mult3 * $v01 + $mult4 * $v11 + $mult5 * $v21;
		$v32 = $mult3 * $v02 + $mult4 * $v12 + $mult5 * $v22;
		$v33 = $mult3 * $v03 + $mult4 * $v13 + $mult5 * $v23;
		$v34 = $mult3 * $v04 + $mult4 * $v14 + $mult5 * $v24 + $d6;
	$vec[$slice[3]] = Matrix->new_column_matrix([ $v31, $v32, $v33, $v34 ]);
    $lambda->assign($slice[0]+1 ,1,0);
    $lambda->assign($slice[1]+1 ,1,0);
    $lambda->assign($slice[2]+1 ,1,0);
    $lambda->assign($slice[3]+1 ,1,0);
} else {
	$lambda->assign($slice[0]+1 ,1,non_zero_random(-5,5,1) );
	$lambda->assign($slice[1]+1 ,1,non_zero_random(-5,5,1) );
	$lambda->assign($slice[2]+1 ,1,non_zero_random(-5,5,1) );
	$vec[$slice[3]] =   ( $lambda->element($slice[0]+1,1) ) * $vec[$slice[0]] 
	                   +( $lambda->element($slice[1]+1,1) ) * $vec[$slice[1]]
	                   +( $lambda->element($slice[2]+1,1) ) * $vec[$slice[2]];
    $v31 = $vec[$slice[3]]->element(1,1);
    $v32 = $vec[$slice[3]]->element(2,1);
    $v33 = $vec[$slice[3]]->element(3,1);
    $v34 = $vec[$slice[3]]->element(4,1);
	$lambda->assign($slice[3]+1,1,-1);
}


$sl = new_pop_up_select_list();
$sl->qa(
"Determine whether or not the four vectors listed above are linearly independent or linearly dependent.",
($flip==0) ? 'Independent' : 'Dependent',
);
$sl->choose(1);
$sl->ra_pop_up_list(['no_answer' => '  ?', 'Independent' => 'Linearly Independent', 'Dependent' => 'Linearly Dependent']);

if ( $flip ) {
    $coef = MultiAnswer( Compute($lambda->element(1,1)),
             Compute($lambda->element(2,1)),
             Compute($lambda->element(3,1)),
             Compute($lambda->element(4,1)) )->with(
        singleResult=>1,
        checker=> sub {
          my ( $c, $s, $ans ) = @_;
          my @sans = @$s;
          my $zero = Compute(0);
          if ( $zero == $sans[0] && $zero == $sans[1] && $zero == $sans[2] && $zero == $sans[3] ) {
            $ans->setMessage(1, "Your responses should not be all zero.");
            return 0;
          } else {
          if ( $sans[$slice[0]]*$v01 + $sans[$slice[1]]*$v11 +
             $sans[$slice[2]]*$v21 + $sans[$slice[3]] * $v31 == 0 &&
             $sans[$slice[0]]*$v02 + $sans[$slice[1]]*$v12 +
             $sans[$slice[2]]*$v22 + $sans[$slice[3]] * $v32 == 0 &&
             $sans[$slice[0]]*$v03 + $sans[$slice[1]]*$v13 +
             $sans[$slice[2]]*$v23 + $sans[$slice[3]] * $v33== 0  &&
             $sans[$slice[0]]*$v04 + $sans[$slice[1]]*$v14 +
             $sans[$slice[2]]*$v24 + $sans[$slice[3]] * $v34== 0) {
            return 1;
        } else {
            return 0;
        }
        }});
} else {
    $coef = MultiAnswer( Compute(0), Compute(0), Compute(0), Compute(0) )->with(
        singleResult=>1,
        checker=> sub {
        my ( $c, $s, $ans ) = @_;
        return $c->[0]==$s->[0] && $c->[1]==$s->[1] && $c->[2]==$s->[2];
    } );
}


BEGIN_TEXT
\{ mbox( 'Let \( A = \)', display_matrix($vec[0]), ', \( B = \)',  display_matrix($vec[1]),
         ', \( C = \)', display_matrix($vec[2]), ', and \( D = \)', display_matrix($vec[3]), '.' ) \} 
$BR
\{$sl->print_q()\}  

$BR
If they are linearly dependent, determine a non-trivial linear relation - (a non-trivial relation is three numbers which
are not all three zero.)
Otherwise, if the vectors are linearly independent, enter 0's for 
the coefficients, since that relationship $BBOLD always $EBOLD holds.
$BR
$BR
\{ $coef->ans_rule(10) \}\(A+\)
\{ $coef->ans_rule(10) \}\(B+\)
\{ $coef->ans_rule(10) \}\(C+\)
\{ $coef->ans_rule(10) \}\(D =0\).

END_TEXT
ANS str_cmp($sl->ra_correct_ans);
ANS( $coef->cmp() );


ENDDOCUMENT() ;        

