## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS('linear algebra','vector space','basis','dot product','inner product','orthonormal')
## Tagged by cmd6a 5/3/06

## DBsubject('Linear Algebra')
## DBchapter('Vector Spaces')
## DBsection('Bases')
## Date('')
## Author('')
## Institution('Rochester')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGnumericalmacros.pl",
"PGstatisticsmacros.pl",
"PGauxiliaryFunctions.pl",
"PGmatrixmacros.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

# create orthogonal vectors

@s = NchooseK(3,3);

$signx = random(-1,1,2);
$signy = random(-1,1,2);
$signz = random(-1,1,2);

$x[$s[0]] = 2 * $signx;
$x[$s[1]] = 2 * $signx;
$x[$s[2]] = 1 * $signx;

$y[$s[0]] = -2 * $signy;
$y[$s[1]] = 1 * $signy;
$y[$s[2]] = 2 * $signy;

$z[$s[0]] = 1 * $signz;
$z[$s[1]] = -2 * $signz;
$z[$s[2]] = 2 * $signz;

#change the vectors so that they are no longer orthogonal but the Gram-Schmidt process gives the original x,y,z.

$k = non_zero_random(-2,2,1);
$m = random(-2,2,1);
$n = non_zero_random(-2,2,1);
$p = random(2,4,1);

$norm_x = 0;
$norm_y = 0;
$norm_z = 0;

foreach $i (0..2) {
        $norm_x = $norm_x + $x[$i] * $x[$i];
        $norm_y = $norm_y + $y[$i] * $y[$i];
        $norm_z = $norm_z + $z[$i] * $z[$i];
	$cz[$i] = $z[$i] + $m*$x[$i] + $n*$y[$i];
 	$cy[$i] = $y[$i] + $k*$x[$i];
	$cx[$i] = $p*$x[$i];
}

$norm_x = sqrt($norm_x);
$norm_y = sqrt($norm_y);
$norm_z = sqrt($norm_z);

BEGIN_TEXT

Perform the Gram-Schmidt process on the following sequence of vectors. 
$BR
\{ mbox( '\(x=\)', display_matrix([[$cx[0]], [$cx[1]], [$cx[2]]]), 
         ', \(y=\)', display_matrix([[$cy[0]], [$cy[1]], [$cy[2]]]), 
	 ', \(z=\)', display_matrix([[$cz[0]], [$cz[1]], [$cz[2]]]), '.') \} 
$BR
\{ mbox( answer_matrix(3,1,10), ', ', answer_matrix(3,1,10), ', ', answer_matrix(3,1,10), '.'  ) \}

END_TEXT

ANS(num_cmp($x[0]/$norm_x));
ANS(num_cmp($x[1]/$norm_x));
ANS(num_cmp($x[2]/$norm_x));

ANS(num_cmp($y[0]/$norm_y));
ANS(num_cmp($y[1]/$norm_y));
ANS(num_cmp($y[2]/$norm_y));

ANS(num_cmp($z[0]/$norm_z));
ANS(num_cmp($z[1]/$norm_z));
ANS(num_cmp($z[2]/$norm_z));


ENDDOCUMENT();       # This should be the last executable line in the problem.

