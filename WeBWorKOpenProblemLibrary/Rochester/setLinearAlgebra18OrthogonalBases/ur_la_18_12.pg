## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS('linear algebra','matrix','basis','image','kernel','orthonormal')
## Tagged by cmd6a 5/3/06

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Image and Kernel')
## Date('')
## Author('')
## Institution('Rochester')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGmatrixmacros.pl", 
"PGnumericalmacros.pl",
"PGauxiliaryFunctions.pl",
"PGmorematrixmacros.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$v = non_zero_random(-3,3,1);

$a[1][1] = $v; 	$a[1][2] = -1;	$a[1][3] = 0;	$a[1][4] = 1;
$a[2][1] = 1;	$a[2][2] = $v;	$a[2][3] = 1;	$a[2][4] = 0;
$a[3][1] = 0;	$a[3][2] = -1;	$a[3][3] = $v;	$a[3][4] = -1;
$a[4][1] = -1;	$a[4][2] = 0;	$a[4][3] = 1;	$a[4][4] = $v;

@slice = NchooseK(4,4);

foreach $i (1..4) { 
	foreach $j (1..4) { 
		$b[$i][$j] = $a[$slice[$i-1]+1][$j];
	}
}

$m = non_zero_random(-3,3,1);
$n = non_zero_random(-3,3,1);

foreach $j (1..4) { 
	$c[2][$j] = $m*$b[1][$j] + $n*$b[2][$j];
}

BEGIN_TEXT

\{ mbox( 'Let \(A=\)', display_matrix([[$b[1][1], $b[1][2], $b[1][3], $b[1][4]], 
				       [$c[2][1], $c[2][2], $c[2][3], $c[2][4]]]), '.' ) \}
$BR
Find orthonormal bases of the kernel, row space, and image (column space) of \(A\).
$BR
\{mbox( 'Basis of the kernel: ', ans_array(4,1,12), ', ', ans_array_extension(4,1,12), '.' )\}
$BR
\{mbox( 'Basis of the row space: ', ans_array(4,1,12), ', ', ans_array_extension(4,1,12), '.' )\}
$BR
\{mbox( 'Basis of the image (column space): ', ans_array(2,1,12), ', ', ans_array_extension(2,1,12), '.' )\}

END_TEXT

$norm = sqrt($v*$v + 2);

ANS(basis_cmp([[$b[3][1]/$norm, $b[3][2]/$norm, $b[3][3]/$norm, $b[3][4]/$norm], 
               [$b[4][1]/$norm, $b[4][2]/$norm, $b[4][3]/$norm, $b[4][4]/$norm]],    
              'mode'=>'orthonormal', 'help'=>'verbose'));

ANS(basis_cmp([[$b[1][1]/$norm, $b[1][2]/$norm, $b[1][3]/$norm, $b[1][4]/$norm], 
	       [$b[2][1]/$norm, $b[2][2]/$norm, $b[2][3]/$norm, $b[2][4]/$norm]], 
	      'mode'=>'orthonormal', 'help'=>'verbose'));

ANS(basis_cmp([[1, 0], [0, 1]], 'mode'=>'orthonormal', 'help'=>'verbose'));

ENDDOCUMENT();       # This should be the last executable line in the problem.

