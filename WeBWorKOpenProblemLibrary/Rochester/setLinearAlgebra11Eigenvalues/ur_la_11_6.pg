## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS ('linear algebra','matrix','eigenvalue','eigenvector')
## Tagged by cmd6a 4/30/06

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Eigenvalues')
## Date('')
## Author('')
## Institution('Rochester')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGanswermacros.pl",
           "MathObjects.pl",
);


TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("Matrix");
#$a= new Matrix(2,2);
# define matrix
        $a11 = random(-1,1,2);
        $a12 = non_zero_random(-3,3,1);
        $mult = non_zero_random(-2,2,1);
        $a21 = $mult * $a11;
        $b1 = random(-1,1,2);
        $a22 = $mult * $a12 + $b1;

        $a = Matrix("[[$a11, $a12], [$a21, $a22]]");

# define inverse matrix
	$b = $a->inverse();
# define eigenvalues
    $e1= non_zero_random(-8,8,1);
# make sure that the eigenvalues are distinct
    do { $e2= non_zero_random(-8,8,1); } while ($e1==$e2);
    $e = Matrix("[[$e1, 0],[0, $e2]]");
# define final matrix
	$matrix = $a * $e *$b;
	$matrix_lr = $matrix->decompose_LR();
	$matrix_det = $matrix_lr->det_LR();

$min = 1;
$min = 2 if ($e2 < $e1);
$max = 3-$min;
Context()->texStrings;

BEGIN_TEXT

Find the eigenvalues of the matrix
\( $matrix \).
$BR
$BR
Smaller eigenvalue \( = \) \{ans_rule(10)\}
$BR
Associated eigenvector \( =  \) 
\{ ans_rule(30) \}
$BR
$BR
Larger eigenvalue \( = \) \{ ans_rule(10) \}
$BR
Associated  eigenvector  \( = \)  
\{ ans_rule(30) \}
$BR$BR
$BBOLD Note: $EBOLD vectors are entered with "angle brackets", such
as <1,2> or <0, -4>.

END_TEXT

Context('Vector');

sub ismult {
  my ( $correct, $student, $ansHash) = @_;
  if ($student->isZero) {
    Value->Error("Eigenvectors cannot be zero");
    return 0;
  }
  return 1 if($correct->isParallel($student)) ;
}

$v1 = Vector($a->element(1,$min), $a->element(2,$min));
$v2 = Vector($a->element(1,$max), $a->element(2,$max));

ANS(num_cmp( $e->element($min,$min) ));
ANS($v1->cmp(checker => ~~&ismult ) );
ANS(num_cmp( $e->element($max,$max) ));
ANS($v2->cmp(checker => ~~&ismult ) );


ENDDOCUMENT() ;        



