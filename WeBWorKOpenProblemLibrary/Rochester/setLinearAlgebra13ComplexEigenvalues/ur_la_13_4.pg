## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS ('linear algebra','matrix','eigenvalue','complex')
## Tagged by cmd6a 4/29/06

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Eigenvalues')
## Date('')
## Author('')
## Institution('Rochester')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGmatrixmacros.pl", 
"PGnumericalmacros.pl",
"PGauxiliaryFunctions.pl",
"PGcomplexmacros.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

# four complex eigenvalues 

$c1 = non_zero_random(1,2,1);
$d1 = random(2,4,1);
$e1 = random(-4,-3,1);

# complex eigenvalues are +- sqrt(-c1^2-d1e1) i 

$c2 = non_zero_random(1,2,1); 
$d2 = random(2,4,1);
$e2 = random(-4,-3,1);

# complex eigenvalues are +- sqrt(-c2^2-d2e2) i

#make sure eigenvalues are distinct: 

if ($c2*$c2 + $d2*$e2 == $c1*$c1 + $d1*$e1) {
	$e2 = $e2-1; 
} 

$B = new Matrix(4,4);

$B -> assign(1,1,$c1);	$B -> assign(1,2,$d1);	  $B -> assign(1,3,0);	  	$B -> assign(1,4,0);
$B -> assign(2,1,$e1); 	$B -> assign(2,2,- $c1);   $B -> assign(2,3,0);	 	$B -> assign(2,4,0);
$B -> assign(3,1,0);	$B -> assign(3,2,0);      $B -> assign(3,3,$c2);	$B -> assign(3,4,$d2);
$B -> assign(4,1,0);    $B -> assign(4,2,0);      $B -> assign(4,3,$e2);        $B -> assign(4,4,- $c2);

# now create a nonsingular matrix with det +-1:

$A = new Matrix(4,4); 

$a[1][1] = random(-1,1,2);
$a[1][2] = random(0,1,1)*random(-1,1,2);
$a[1][3] = random(0,1,1)*random(-1,1,2);
$a[1][4] = random(0,1,1)*random(-1,1,2);

$b[2][1] = 0;
$b[2][2] = random(-1,1,2);
$b[2][3] = random(0,1,1)*random(-1,1,2);
$b[2][4] = random(0,1,1)*random(-1,1,2);

$b[3][1] = 0;
$b[3][2] = 0;
$b[3][3] = random(-1,1,2); 
$b[3][4] = random(0,1,1)*random(-1,1,2);

$b[4][1] = 0;
$b[4][2] = 0;
$b[4][3] = 0;
$b[4][4] = random(-1,1,2);

$k = random(0,1,1)*random(-1,1,2);
$l = random(0,1,1)*random(-1,1,2);
$m = random(0,1,1)*random(-1,1,2);
$n = random(0,1,1)*random(-1,1,2);
$p = random(0,1,1)*random(-1,1,2);
$q = random(0,1,1)*random(-1,1,2);

foreach $i (1..4) { 
	$a[2][$i] = $b[2][$i] + $k*$a[1][$i];
	$a[3][$i] = $b[3][$i] + $l*$a[1][$i] + $m*$a[2][$i]; 
	$a[4][$i] = $b[4][$i] + $n*$a[1][$i] + $p*$a[2][$i] + $q*$a[3][$i];
}

$A = new Matrix(4,4);

foreach $i (1..4) { 
	foreach $j (1..4) { 
		$A -> assign($i,$j,$a[$i][$j]);
	}
}
        
$A_lr = $A->decompose_LR();
$I = $A_lr->invert_LR();

$M = new Matrix(4,4);

$M = $A * $B * $I;

BEGIN_TEXT

Find all the eigenvalues (real and complex) of the matrix 
$BR
\{ mbox( '\(M=\)', display_matrix($M), '.' )\} 
$BR
Enter your answers in the following blank, separated by commas: 
$BR 
\{ans_rule(50)\} 

END_TEXT

$ans1 = new Complex(0, sqrt(- $c1*$c1 - $d1*$e1));
$ans2 = new Complex(0, - sqrt(- $c1*$c1 - $d1*$e1));
$ans3 = new Complex(0, sqrt(- $c2*$c2 - $d2*$e2));
$ans4 = new Complex(0, - sqrt(- $c2*$c2 - $d2*$e2));

ANS(multi_cmp( [ cplx_cmp($ans1), cplx_cmp($ans2), cplx_cmp($ans3), cplx_cmp($ans4) ] ));

ENDDOCUMENT();       # This should be the last executable line in the problem.

