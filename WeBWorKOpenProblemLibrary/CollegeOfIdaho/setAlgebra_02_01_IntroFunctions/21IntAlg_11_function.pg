##DESCRIPTION
## Introduction to Functions
## 
##ENDDESCRIPTION
## DBsubject('Intermediate Algebra')
## DBchapter('Ch 02: Functions and Linear Functions')
## DBsection('Introduction to Functions')
## KEYWORDS('functions')
## TitleText1('Essentials of Intermediate Algebra')
## EditionText1('1')
## AuthorText1('Blitzer')
## Section1('2.1')
## Problem1('')
## Author('RA Cruz')
## Institution('The College of Idaho')
## Date: 2007/09

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "MathObjects.pl",
  "contextInequalitiesAllowStrings.pl",
  "answerHints.pl",
  "PGgraphmacros.pl",
  "PGnauGraphics.pl"
);

TEXT(beginproblem());

######################################
#  Setup

Context("Numeric");

#--------Define the function-----------

@xnum = (random(-5,-3,1),random(-1,0,1),random(1,2,1),random(4,5,1));
@yvalue = (random(-5,-3,1),random(-3,2,1),random(-2,3,1),random(3,5,1));
@slice = NchooseK(4,4);
@ynum = @yvalue[@slice];

$m1 = ($ynum[1] - $ynum[0])/($xnum[1] - $xnum[0]);
$m2 = ($ynum[2] - $ynum[1])/($xnum[2] - $xnum[1]);
$m3 = ($ynum[3] - $ynum[2])/($xnum[3] - $xnum[2]);
$b1 = $ynum[0]-$m1*$xnum[0];
$b2 = $ynum[1]-$m2*$xnum[1];
$b3 = $ynum[3]-$m3*$xnum[3];

$f1 = Formula("$m1*x+$b1");
$f2 = Formula("$m2*x+$b2");
$f3 = Formula("$m3*x+$b3");

#------------Define the graph-----------------------

$choose = random(0,2,1);
@colors = ("blue", "red", "green");
$rc = $colors[$choose];   #Pick a random color

$xmin = -6;
$ymin = -6;
$xmax = 6;
$ymax = 6;

$graph = init_graph_no_labels($xmin,$ymin,$xmax,$ymax,
                             'axes'=>[0,0],'grid'=>[$xmax-$xmin,$ymax-$ymin]);

$f1_graph = FEQ("$f1 for x in [$xnum[0],$xnum[1]] using color:$rc and weight:3");
$f2_graph = FEQ("$f2 for x in [$xnum[1],$xnum[2]] using color=$rc and weight:3");
$f3_graph = FEQ("$f3 for x in [$xnum[2],$xnum[3]] using color=$rc and weight=3");
add_functions( $graph,$f1_graph,$f2_graph,$f3_graph );

$label = new Label($xmin+2,$ymax-.5, "y = g(x)",'black','center');
$graph->lb($label);

$i = 0;           # Number the axes
do {
  $xtick = $i + $xmin + 1;
  $labelx[$i] = new Label($xtick,0, "$xtick",'black','center');
  if ($xtick!=0) {$graph->lb($labelx[$i]);}
  $i =$i+1;
} while ($i<($xmax-$xmin)-1);

$i = 0;
do {
  $ytick = $i +$ymin + 1;
  $labely[$i] = new Label(-.2,$ytick+.1, "$ytick",'black','center');
  if ($ytick!=0) {$graph->lb($labely[$i]);} 
  $i =$i+1;
} while ($i<($ymax-$ymin)-1);

#------------Pick the points---------------

@n = (random($xnum[0],$xnum[1]-1,1), 
        random($xnum[1],$xnum[2]-1,1),
        random($xnum[2],$xnum[3],1));
@value = ($f1->eval(x=>$n[0]), 
          $f2->eval(x=>$n[1]),
          $f3->eval(x=>$n[2]));
@slice = NchooseK(3,2);
@input = @n[@slice];
@answer = @value[@slice];

######################################
#  Main text (part 1)
#  Note:  tex_size=>n is for the size on the hardcopy: 600=60%

BEGIN_TEXT
\{ Plot($graph,tex_size=>600) \} 
$BR $BR
Use the graph of \(y=g(x)\) given above to find:
$PAR
a) \( g($input[0]) \) = \{ans_rule(10)\}
$PAR
b) \( g($input[1]) \) = \{ans_rule(10)\}
END_TEXT

######################################
#  Answers (part 1)

Context()->strings->add("No solution"=>{},
                        "Not defined"=>{},
                        "Does not exist"=> {},
                        "All real numbers"=>{});

$ans_a = Real($answer[0])->with(tolerance=>0.15, tolType=>'absolute');
ANS($ans_a->cmp);

$ans_b = Real($answer[1])->with(tolerance=>0.15, tolType=>'absolute');
ANS($ans_b->cmp);

######################################
#  Main text (part 2)

BEGIN_TEXT
$PAR
c) The domain: \{ans_rule(20)\}
$PAR
d) The range: \{ans_rule(20)\}
END_TEXT

######################################
#  Answers  (part 2)
#  Note:  The context is changed to inequalites that allow 
#         "All real numbers" as an alias for "R" in a customized 
#         context.
#  Note:  The PostFilter check is to make sure the inequality has the 
#         correct variable. The comparison is to -infinity<x<infinity, 
#         so the check is only done if the student's answer is in 
#         inequality form.

Context("Inequalities-AllowStrings");
Context()->variables->add(y=>'Real');

$ans_c = Compute("$xnum[0] <= x <= $xnum[3]");
ANS($ans_c->cmp->withPostFilter(AnswerHints(
            sub {
                my ($correct,$student,$ans) = @_;
                return $student =~ /y/ && $student=~/[<>]/;
                } => ["Use the variable $BITALIC x $EITALIC for the domain of a function.", 
                      checkCorrect => 1, 
                      score => 0]
)));

$ans_d = Compute("$yvalue[0] <= y <= $yvalue[3]");
ANS($ans_d->cmp->withPostFilter(AnswerHints(
            sub {
                my ($correct,$student,$ans) = @_;
                return $student =~ /x/;
                } => ["Use the variable $BITALIC y $EITALIC for the range of a function.", 
                      checkCorrect => 1, 
                      score => 0]
)));

$showPartialCorrectAnswers = 1;

######################################


COMMENT('MathObject version');
ENDDOCUMENT();
