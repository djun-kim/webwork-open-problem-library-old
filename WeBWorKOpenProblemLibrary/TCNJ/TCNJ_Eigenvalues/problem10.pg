## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS('eigenvalues' 'eigenvectors')
## Tagged by tda2d

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Eigenvalues')
## Date('')
## Author('')
## Institution('TCNJ')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGgraphmacros.pl",
           "PGmatrixmacros.pl",
           "PGnumericalmacros.pl",
           "PGdiffeqmacros.pl",
           "parserMultiAnswer.pl"
);


TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$a= new Matrix(2,2);
# define matrix
        $a11 = random(-1,1,2);
        $a12 = non_zero_random(-3,3,1);
        $mult = non_zero_random(-2,2,1);
        $a21 = $mult * $a11;
        $b1 = random(-1,1,2);
        $a22 = $mult * $a12 + $b1;

        $a->assign(1,1, $a11 );
        $a->assign(1,2, $a12 );
        $a->assign(2,1, $a21 );
        $a->assign(2,2, $a22 );
        $a_lr = $a->decompose_LR();
        $a_det = $a11 * $b1;

# define inverse matrix
	$b = $a_lr->invert_LR();
# define eigenvalues
    $e = new Matrix(2,2);
    $e->one();
    $e->assign(1,1, non_zero_random(-8,8,1));
    $e->assign(2,2, non_zero_random(-8,8,1));
# make sure that the eigenvalues are distinct
	while ($e->element(1,1) == $e->element(2,2)) { $e->assign(2,2, non_zero_random(-8,8,1)); }
    $e1 = $e->element(1,1);
    $e2 = $e->element(2,2);

# define final matrix
	$matrix = $a * $e *$b;
	$matrix_lr = $matrix->decompose_LR();
	$matrix_det = $matrix_lr->det_LR();


$ev = MultiAnswer($a11, $a21, $a21, $a22)->with(
    singleResult => 1,
    checkTypes => 0,
    allowBlankAnswers => 1,
    format =>  "Eigenvectors = (%s, %s), (%s, %s)",
    tex_format =>  "\text{Eigenvectors }= (%s, %s), (%s, %s)" ,
    checker => sub {
        my ($correct, $student, $self ) = @_;
	my ($stuv11, $stuv12, $stuv21, $stuv22) = @{$student}[0..3];
        my $flag = 0;
        my $flag1=0;
        my $flag2=0;
        my $counter =0;
        if(length($stuv11) && length($stuv12)){
           my $v1 = new Matrix(2, 1);
           if($stuv11 != 0 || $stuv12 !=0){
             $v1-> assign(1,1, $stuv11);
             $v1-> assign(2,1, $stuv12);
             if( $matrix * $v1 == $e1 * $v1){
                $flag1=1;
             }
           }
        }
        if(length($stuv21) && length($stuv22)){
           my $v2 = new Matrix(2, 1);
           if($stuv21 != 0 || $stuv22 !=0){
             $v2-> assign(1,1, $stuv21);
             $v2-> assign(2,1, $stuv22);
             if( $matrix * $v2 == $e2 * $v2){
               $flag2=1;
             }
           }
        }
        if($flag1==1 && $flag2 ==1){
           $flag=1;
        }else{
           if($flag1 + $flag2 == 1){
              Value::Error("One of the eigenvectors is correct");
           }else{
              Value::Error("Neither of the eigenvectors is correct");
           }
        }
        return $flag; 
       
    }
);


BEGIN_TEXT

\{ mbox( 'The matrix \(A=\)', display_matrix($matrix), ' has eigenvalues \( $e1 \) and \( $e2 \). ' ) \} 
$BR 
Find its eigenvectors.
$BR
$BR
The eigenvalue \( $e1 \) is associated with eigenvector ( \{ $ev-> ans_rule(5)\}, \{$ev-> ans_rule(5)\}).
$BR
The eigenvalue \( $e2 \) is associated with eigenvector  ( \{ $ev-> ans_rule(5)\}, \{$ev-> ans_rule(5)\}).
$BR


END_TEXT
ANS($ev->cmp() );


ENDDOCUMENT() ;
