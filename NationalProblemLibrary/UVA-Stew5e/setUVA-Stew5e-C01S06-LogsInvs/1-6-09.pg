## DESCRIPTION
## Calculus: Functions and models
## ENDDESCRIPTION

## KEYWORDS('calculus', 'functions','models')
## Tagged by LD

## DBsubject('Calculus')
## DBchapter('Functions and Models')
## DBsection('Inverse Functions and Logarithms')
## Date('5/26/2005')
## Author('Jeff Holt')
## Institution('UVA')
## TitleText1('Calculus: Early Transcendentals')
## EditionText1('5')
## AuthorText1('Stewart')
## Section1('1.6')
## Problem1('9')

## TitleText2('Calculus: Early Transcendentals')
## EditionText2('6')
## AuthorText2('Stewart')
## Section2('1.6')
## Problem2('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;
install_problem_grader(~~&std_problem_grader);

$a = random(2,8,1);
$b = random(2,8,1);
$c = random(2,8,1);
$d = random(2,8,1);
$e = random(2,8,1);
$f = random(2,8,1);

$b1 = $b - 1;
$b2 = $b + 1;

TEXT(EV2(<<EOT));
Enter a Y (for Yes) or an N (for No) in each answer space below
to indicate whether the corresponding function is one-to-one or not.
$PAR
You must get all of the answers correct to receive credit.
EOT
$questStr1 = EV2(" \( f(t) = 2^t \)");
$ansStr1 = "Y";
$questStr2 = EV2(" \( k(t) = $e \sqrt t + $f \)");
$ansStr2 = "Y";
$questStr3 =EV2(" \( g(t) = $c t^2 + $d \)");
$ansStr3 = "N";
$questStr4 =EV2( " \(h(t) = $c t^2 + $d, \quad t \le 0 \)");
$ansStr4 = "Y";
$questStr5 =EV2( " \( h(x) = |x| + $a \)");
$ansStr5 = "N";
$questStr6 =EV2( " \(k(x) = (x - $b)^2, \quad $b1 \le x \le $b2 \)");
$ansStr6 = "N";
$questStr7 =EV2( " \(f(x) = \sin { x }, \quad 0 \le x \le \pi \)");
$ansStr7 = "N";
$questStr8 =EV2( " \(k(x) = \cos { x }, \quad 0 \le x \le \pi \)");
$ansStr8 = "Y";

@questions =( $questStr1,$questStr2,$questStr3,$questStr4,$questStr5,$questStr6,$questStr7,$questStr8);
@answers =( $ansStr1,$ansStr2,$ansStr3,$ansStr4,$ansStr5,$ansStr6,$ansStr7,$ansStr8);

## Now choose radomly 6  questions out of the  question strings above.

@slice = NchooseK(scalar(@questions),6);

## Next we output the 6 chosen questions.

TEXT(
&match_questions_list(@questions[@slice])
);

ANS(str_cmp([@answers[@slice]], filters=>["remove_whitespace","ignore_case"]));

ENDDOCUMENT();        # This should be the last executable line in the problem.
