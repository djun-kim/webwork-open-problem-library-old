## -*- perl -*- ##
## Line above puts emacs in perl mode
##
## Description  
##   Sampling student answers
## EndDescription

DOCUMENT();
loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGauxiliaryFunctions.pl",
           );
 


TEXT(beginproblem());


BEGIN_TEXT
$BR
Enter the functions \( e^{2t} \) and \(e^{3t}\) in the blanks below

$BR

\(f_1(t) = \) \{NAMED_ANS_RULE(first_fcn,25)\} 
and \(f_2(t) = \) \{NAMED_ANS_RULE(second_fcn,25)\}

$PAR
END_TEXT

$firstAnswer = $inputs_ref->{first_fcn};         ## Grab the first answer entered by student

## Alternate means of grabbing fucntion
#$firstAnswer =  ${$main::inputs_ref}{first_fcn} if defined(${$main::inputs_ref}{first_fcn});

$firstAnswer = '' unless defined($firstAnswer);  ## Make sure it is defined
$firstAnswer =~ s/t/(1)/g;                       ## Globally substitute (1) for t in $firstAnswer


($ans_eval1) = num_cmp(exp(2 * 1));             ## Answer evaluator for the first fucntion at t = 1

#$rh_ans_hash = new AnswerHash;
$rh_ans_hash = &$ans_eval1($firstAnswer);        ## Check first answer against given
BEGIN_TEXT
    $ans_eval1->{student_ans}
END_TEXT

## Check answers accordingly
if ( $rh_ans_hash->{score} == 1 ) 
{
    NAMED_ANS( first_fcn, fun_cmp("exp(2*t)", vars=>['t']) );
    NAMED_ANS( second_fcn, fun_cmp("exp(3*t)", vars=>['t']) );
}
else
{   
    NAMED_ANS( first_fcn, fun_cmp("exp(3*t)", vars=>['t']) );
    NAMED_ANS( second_fcn, fun_cmp("exp(2*t)", vars=>['t']) );
}

ENDDOCUMENT();




