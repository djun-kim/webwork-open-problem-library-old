## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS('matrix' 'equation' 'row reduction' 'determinant')
## Tagged by tda2d

## DBsubject('Linear Algebra')
## DBchapter('Systems of Linear Equations and Matrices')
## DBsection('Introduction to Systems of Linear Equations')
## Date('')
## Author('')
## Institution('TCNJ')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

# Description
# The first example using match lists
# EndDescription


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGgraphmacros.pl",
           "PGnumericalmacros.pl",
           "PGmatrixmacros.pl",
"Parser.pl",
           );

Context('Numeric');

TEXT(beginproblem());

$showPartialCorrectAnswers = 1;

$a = new Matrix(2,2);

####################
# simple version

$a->assign(1,1,random(1,3,1));
$a->assign(1,2,random(-3,-1,1));
$a->assign(2,1,random(2,6,1));
$a->assign(2,2,random(2,6,1));

@vals = ( $a->element(1,1), $a->element(1,2), $a->element(2,1), $a->element(2,2) );
$a_det = Compute("$vals[0]*$vals[3] - $vals[1]*$vals[2]");

$ycoeff = Compute( "$vals[3] - $vals[2]*$vals[1]/$vals[0]" );

##########################
# define right hand side

$rhs = new Matrix(2,1);

$rhs->assign(1,1,non_zero_random(-2,2,1));
$rhs->assign(2,1,non_zero_random(-2,2,1));

@bvals = ( $rhs->element(1,1), $rhs->element(2,1) );
$bvalue = Compute( "$bvals[1] - $vals[2]*$bvals[0]/$vals[0]" );
$y = Compute( "($vals[0]*$bvals[1] - $vals[2]*$bvals[0])/($vals[0]*$vals[3] - $vals[1]*$vals[2])" );
$x = Compute( "($bvals[0]/$vals[0]) - ($vals[1]/$vals[0])*$y" );

BEGIN_TEXT
Perform one step of row reduction, in order to calculate the values for x and y by back substitution.
Then calculate the values for x and for y.  Also calculate the determinant of the original matrix.
$PAR
You can let webwork do much of the calculation for you if you want (e.g.  enter 45-(56/76)(-3) instead
of calculating the value out).  You can also use the preview feature in order to make sure
that you have used the correct syntax in entering the answer.

$PAR
[Note-- since the determinant is unchanged by row reduction it will be easier to calculate the
determinant of the row reduced matrix.]
$BR
\{ mbox([ display_matrix($a), ' ', display_matrix([['\(x\)'],['\(y\)']]), '\(=\)', display_matrix($rhs) ]) \}
$BR
\{ mbox([ display_matrix([[$a->element(1,1), $a->element(1,2)], [0, ans_rule(15)]]), display_matrix([['\(x\)'],['\(y\)']]), '\(=\)', display_matrix([[$rhs->element(1,1)], [ans_rule(15)]]) ]) \} 
$BR
\(x = \) \{ans_rule(30)\} $BR
\(y = \) \{ans_rule(30)\} $BR
\(\mbox{det} = \) \{ans_rule(30)\}

END_TEXT

ANS( $ycoeff->cmp() );
ANS( $bvalue->cmp() );
ANS( $x->cmp() );
ANS( $y->cmp() );
ANS( $a_det->cmp() );

ENDDOCUMENT() ;      


## The old code for this problem is below.  There is an error in the code that
## it can give a 0 in the top-left corner (with seed 4804) for example.

## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS('matrix' 'equation' 'row reduction' 'determinant')
## Tagged by tda2d

## DBsubject('Linear Algebra')
## DBchapter('Systems of Linear Equations and Matrices')
## DBsection('Introduction to Systems of Linear Equations')
## Date('')
## Author('')
## Institution('TCNJ')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

# Description
# The first example using match lists
# EndDescription


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGgraphmacros.pl",
           "PGnumericalmacros.pl",
           "PGmatrixmacros.pl",
"Parser.pl",
           );


TEXT(beginproblem());

$showPartialCorrectAnswers = 1;


$a = new Matrix(2,2);
$matrix = new Matrix(2,2);
$e = new Matrix(2,2);
$a->zero;
$matrix->zero;
$a_det = 0;
$matrix_det=0;
	# define matrix
		$a->assign(1,1,non_zero_random(1,2,1) );
		$a->assign(1,2,non_zero_random(-2,-1,1) );
		$a->assign(2,1,non_zero_random(1,2,1) );
		$a->assign(2,2,non_zero_random(1,2,1) );
		$a_lr = $a->decompose_LR();
		$a_det = $a_lr->det_LR();

        #define inverse matrix
		$b = $a_lr->invert_LR();
        #define eigenvalues
		#define eigenvalues
		    $e->one();
		    $e->assign(1,1, random(1,2,1)*$a_det);
		    $e->assign(2,2, random(-2,-1,1)*$a_det);
        #define final matrix
			$matrix = $a * $e *$b;
			$matrix_lr = $matrix->decompose_LR();
			$matrix_det = $matrix_lr->det_LR();


# The resulting matrix is guaranteed invertible and the upper left corner is non zero
# so that you won't have to change orders in order to get a pivot.

##########################
#define right hand side
    $rhs = new Matrix(2,1);  # a column vector

    $rhs->assign(1,1,non_zero_random(-2,2,1));
    $rhs->assign(2,1,non_zero_random(-2,2,1));


BEGIN_TEXT

Perform one step of row reduction, in order to calculate the values for x and y by back substitution.
Then calculate the values for x and for y.  Also calculate the determinant of the original matrix.
$PAR
You can let webwork do much of the calculation for you if you want (e.g.  enter 45-(56/76)(-3) instead
of calculating the value out).  You can also use the preview feature in order to make sure
that you have used the correct syntax in entering the answer.

$PAR
[Note-- since the determinant is unchanged by row reduction it will be easier to calculate the
determinant of the row reduced matrix.]
$BR
\{ mbox([ display_matrix($matrix), ' ', display_matrix([['\(x\)'],['\(y\)']]), '\(=\)', display_matrix($rhs) ]) \}
$BR
\{ mbox([ display_matrix([[$matrix->element(1,1), $matrix->element(1,2)], [0, ans_rule(15)]]), display_matrix([['\(x\)'],['\(y\)']]), '\(=\)', display_matrix([[$rhs->element(1,1)], [ans_rule(15)]]) ]) \} 
$BR
\(x = \) \{ans_rule(30)\} $BR
\(y = \) \{ans_rule(30)\} $BR
\(\mbox{det} = \) \{ans_rule(30)\}

END_TEXT

$ratio = ($matrix->element(2,1))/($matrix->element(1,1));

($matrix->row(2) -  $ratio*$matrix->row(1))->element(1,2) ;

ANS(num_cmp( ($matrix->row(2) -  $ratio* ($matrix->row(1)))->element(1,2) ,tol=>.2  ));

ANS(num_cmp( $rhs->element(2,1)- $ratio* ($rhs->element(1,1)) , tol=>.2    ));

# calculate the x and y values
$y= ( $rhs->element(2,1)- $ratio*($rhs->element(1,1)) )/($matrix->element(2,2) - $ratio*($matrix->element(1,2)));
$x= ( $rhs->element(1,1) - $y*($matrix->element(1,2)) )/($matrix->element(1,1));

ANS(num_cmp( [$x,$y,$matrix_det ],reltol=>.2));



ENDDOCUMENT() ;      


