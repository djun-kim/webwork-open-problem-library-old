## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS('diagonalization' 'matrices')
## Tagged by tda2d

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Diagonalization')
## Date('')
## Author('')
## Institution('TCNJ')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGmatrixmacros.pl",
"PGnumericalmacros.pl",
"PGauxiliaryFunctions.pl",
"PGmorematrixmacros.pl",
);

TEXT(beginproblem());

$a= new Matrix(2,2);
$a11 = random(-1,1,2);
$a12 = non_zero_random(-3,3,1);
$mult = non_zero_random(-2,2,1);
$a21 = $mult * $a11;
$b1 = non_zero_random(-1,1,2);
$a22 = $mult * $a12 + $b1;
$a->assign(1,1, $a11 );
$a->assign(1,2, $a12 );
$a->assign(2,1, $a21 );
$a->assign(2,2, $a22 );
$a_lr = $a->decompose_LR();
$a_det = $a11 * $b1;
$b = $a_lr->invert_LR();
$e = new Matrix(2,2);
$e->one();
$e->assign(1,1, non_zero_random(-8,8,1));
$e->assign(2,2, non_zero_random(-8,8,1));
while ($e->element(1,1) >= $e->element(2,2)) { 
   $e->assign(2,2, non_zero_random(-8,8,1)); }
$matrix = $a * $e *$b;
$matrix_lr = $matrix->decompose_LR();
$matrix_det = $matrix_lr->det_LR();

BEGIN_TEXT
\{mbox( 'Let: ', '\(A = \)' , display_matrix($matrix) )\}$BR
Find \(S\), \(D\) and \(S^{-1}\) such that \(A=SDS^{-1}\). Put the $BBOLD smaller $EBOLD  eigenvalue in the first row. $BR
\{mbox('\(S=\)',answer_matrix(2,2,5),'\(D=\)',answer_matrix(2,2,5),'\(S^{-1}=\)',answer_matrix(2,2,5))\}
END_TEXT

ANS num_cmp(ra_flatten_matrix($a));
ANS num_cmp(ra_flatten_matrix($e));
ANS num_cmp(ra_flatten_matrix($b));

ENDDOCUMENT();       # This should be the last executable line in the problem.