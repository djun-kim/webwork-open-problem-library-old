## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS('matrix' 'product' 'sum' 'equation')
## Tagged by tda2d

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Matrix Operations')
## Date('')
## Author('')
## Institution('TCNJ')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGmatrixmacros.pl", 
"PGnumericalmacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$A = new Matrix(2,2);
$B = new Matrix(2,2);
$C = new Matrix(2,2);
$D = new Matrix(2,2);
$Inv = new Matrix(2,2);

$a = random(-9,9,2);
$d = random(-9,9,2);
$b = non_zero_random(-8,8,2);
$c = non_zero_random(-9,9,1);

$A->assign(1,1, $a);
$A->assign(1,2, $b);
$A->assign(2,1, $c);
$A->assign(2,2, $d);

$e = random(-9,9,2);
$h = random(-9,9,2);
$f = non_zero_random(-8,8,2);
$g = non_zero_random(-9,9,1);

$C->assign(1,1, $e);
$C->assign(1,2, $f);
$C->assign(2,1, $g);
$C->assign(2,2, $h);


## the numbers above aren't chosen to prevent det == 0, so correct for
##    that here
$det = ($e-$a)*($h-$d)-($f-$b)*($g-$c);
if ( $det == 0 ) {
    if ( ($e-$a)*($h-$d) == 0 ) {
    $e++ if ( $e - $a == 0 );
    $h++ if ( $h - $d == 0 );
    } else {
    ## otherwise, we're concerned that the products are equal
    $e++;
    }
    $det = ($e-$a)*($h-$d)-($f-$b)*($g-$c);
}

$ans11 = ($h-$d) / $det;
$ans12 = - ($f-$b) / $det;
$ans21 = - ($g-$c) / $det;
$ans22 = ($e-$a) / $det ;

$Inv->assign(1,1,$ans11);
$Inv->assign(1,2,$ans12);
$Inv->assign(2,1,$ans21);
$Inv->assign(2,2,$ans22);

foreach my $i (1..2) {
   foreach my $j (1..2) {
      $B->assign($i,$j, random(-9,9,1));
   }
}

$D = $Inv*$B;

BEGIN_TEXT

Solve for \(X\). 
$BR
$BR
\{ mbox( display_matrix($A), '\(X +\)', display_matrix($B), '\(=\)', display_matrix($C), '\(X\)' ) \}
$BR
\{ mbox( '\(X=\)', answer_matrix(2,2,10) ) \}

END_TEXT

ANS num_cmp(ra_flatten_matrix($D));

ENDDOCUMENT();       # This should be the last executable line in the problem.