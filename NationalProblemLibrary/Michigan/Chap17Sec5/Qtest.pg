DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
);

Context("Vector");
Context()->variables->are( t=>'Real', s=>'Real' );
$showPartialCorrectAnswers = 1;

@p = ( 3,1,4 );
@ncomp = ( 2,7,2 );

$ppos = Vector( Compute( $p[0] ), Compute( $p[1] ), Compute( $p[2] ) );
$dv1 = Vector( Compute( -1*$ncomp[1] ), Compute( $ncomp[0] ), Compute( 0 ) );
$dv2 = Vector( Compute( -1*$ncomp[2] ), Compute( 0 ), Compute( $ncomp[0] ) );

$rparam = Vector( "$ppos + $dv1*s + $dv2*t" );

Context()->texStrings;
TEXT(beginproblem());
BEGIN_TEXT

Enter \( $rparam \): \{ ans_rule(55) \}

END_TEXT
Context()->normalStrings;

ANS($rparam->cmp(checker=>sub {
    my ( $c, $s, $ans ) = @_;
    ## the answer must be linear in s and t and contain
    ##    the three points.
    # $s = Vector( $s );
    my @stucoord = $s->value;
    warn( "ref(s) = " . ref($s)  );
    warn( "ref(s) = " . ref($stucoord[0])  );
    warn( "ref(s) = " . ref($stucoord[1])  );
    warn( "ref(s) = " . ref($stucoord[2])  );
    # (3 - 7s - 2t)i + (1 + 2s) j + (4 + 2t) k

    my $dxds = $stucoord[0]->D('s');
    my $dyds = $stucoord[1]->D('s');
    my $dzds = $stucoord[2]->D('s');
    my $dxdt = $stucoord[0]->D('t');
    my $dydt = $stucoord[1]->D('t');
    my $dzdt = $stucoord[2]->D('t');
    my $dxds2 = $dxds->D('s');
    my $dyds2 = $dyds->D('s');
    my $dzds2 = $dzds->D('s');
    my $dxdt2 = $dxdt->D('t');
    my $dydt2 = $dydt->D('t');
    my $dzdt2 = $dzdt->D('t');

    my @q = ( Compute($p[0]-$ncomp[1]), Compute($p[1]+$ncomp[0]),
	      Compute($p[2]) );
    my @r = ( Compute($p[0]-$ncomp[2]), Compute($p[1]),
	      Compute($p[2]+$ncomp[0]) );

    if ( $dxds2 != 0 || $dyds2 != 0 || $dzds2 != 0 ||
         $dxdt2 != 0 || $dydt2 != 0 || $dzdt2 != 0 ) {
	Value->Error("Your answer doesn't look like a plane.");
	return 0;
    } else {
        ## the points lie on the plane only if
	if ( $dxdt*$dyds - $dxds*$dydt != 0 ) {
	    my $sx0 = $stucoord[0]->eval( s=>0, t=>0 );
	    my $sy0 = $stucoord[1]->eval( s=>0, t=>0 );
	    my $sz0 = $stucoord[2]->eval( s=>0, t=>0 );

	    ## p[0] and p[1] lie on the plane with s and t equal to
	    my $jac = $dxdt*$dyds - $dxds*$dydt;
	    my $s0 = ($dydt*($sx0-$p[0]) + $dxdt*($p[1]-$sy0))/$jac;
	    my $t0 = ($dyds*($p[0]-$sx0) + $dxds*($sy0-$p[1]))/$jac;

	    ## q[0] and q[1] lie on the plane with s and t equal to
	    my $s1 = ($dydt*($sx0-$q[0]) + $dxdt*($q[1]-$sy0))/$jac;
	    my $t1 = ($dyds*($q[0]-$sx0) + $dxds*($sy0-$q[1]))/$jac;

	    ## r[0] and r[1] lie on the plane with s and t equal to
	    my $s2 = ($dydt*($sx0-$r[0]) + $dxdt*($r[1]-$sy0))/$jac;
	    my $t2 = ($dyds*($r[0]-$sx0) + $dxds*($sy0-$r[1]))/$jac;

	    if ( $stucoord[2]->substitute( s=>$s0, t=>$t0 ) == $p[2] &&
		 $stucoord[2]->substitute( s=>$s1, t=>$t1 ) == $q[2] &&
		 $stucoord[2]->substitute( s=>$s2, t=>$t2 ) == $r[2]  ) {
		return 1;
	    } else {
		return 0;
	    }
	} else {
	    return 0;
	}
    }
}) );

ENDDOCUMENT();
