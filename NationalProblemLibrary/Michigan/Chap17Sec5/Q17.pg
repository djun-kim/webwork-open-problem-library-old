# DESCRIPTION
# Problem from Calculus, multi-variable, Hughes-Hallett et al.,
# originally from 5ed (with updates)
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

## KEYWORDS('parametric surfaces', 'parametric equations', 'multivariable', 'functions')
## Tagged by glr 06/17/10


## DBsubject('Calculus')
## DBchapter('Vector Calculus')
## DBsection('Parameterized Surfaces and Their Areas')
## Date('')
## Author('Gavin LaRose')
## Institution('University of Michigan')
## TitleText1('Calculus')
## EditionText1('5')
## AuthorText1('Hughes-Hallett')
## Section1('17.5')
## Problem1('17')

## Textbook tags
## HHChapter1('Parameterization and Vector Fields')
## HHSection1('Parameterized Surfaces')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"parserVectorUtils.pl",
# "parserNumberWithUnits.pl",
# "parserFormulaWithUnits.pl",
# "parserFormulaUpToConstant.pl",
# "PGcourse.pl",
);

Context("Vector");
Context()->flags->set( ijk=>1 );
Context()->constants->set(
  i => {TeX => "\,\mathit{\vec i}"},
  j => {TeX => "\,\mathit{\vec j}"},
  k => {TeX => "\,\mathit{\vec k}"},
);
Context()->variables->are( t=>'Real', s=>'Real' );
$showPartialCorrectAnswers = 1;

@p = ( non_zero_random(-5,5,1), non_zero_random(-5,5,1),
       non_zero_random(-5,5,1) );
@ncomp = ( non_zero_random(-5,5,1), non_zero_random(-5,5,1),
	   non_zero_random(-5,5,1) );

$n = Vector( Compute( $ncomp[0] ), Compute( $ncomp[1] ), Compute( $ncomp[2] ) );

$ppos = Vector( Compute( $p[0] ), Compute( $p[1] ), Compute( $p[2] ) );
$dv1 = Vector( Compute( -1*$ncomp[1] ), Compute( $ncomp[0] ), Compute( 0 ) );
$dv2 = Vector( Compute( -1*$ncomp[2] ), Compute( 0 ), Compute( $ncomp[0] ) );

$rparam = Vector( "$ppos + $dv1*s + $dv2*t" );

Context()->texStrings;
TEXT(beginproblem());
BEGIN_TEXT

Parameterize the plane through the point
\( ($p[0], $p[1], $p[2]) \) with the normal vector
\( $n \)

$PAR
\( \vec r(s,t) = \) \{ ans_rule(55) \}
$BR
${BITALIC}(Use \(s\) and \(t\) for the parameters in your
parameterization, and enter your vector with angle brackets,
(not with \(ijk\) notation).)$EITALIC

END_TEXT
Context()->normalStrings;

## FIXME: THIS FAILS WITH ijk FORMAT ENTERED ANSWERS

ANS( $rparam->cmp( checker=>sub {
    my ( $c, $s, $ans ) = @_;
    ## the answer must be linear in s and t and contain
    ##    the three points.
    # warn( "s = " . $s );
    # my $xcoord = ($s . Vector(1,0,0));
    # my $ycoord = ($s . Vector(0,1,0));
    # my $zcoord = ($s . Vector(0,0,1));
    # my @stucoord = ( $xcoord, $ycoord, $zcoord );
    my @stucoord = $s->value;
    # warn( "0 = " . $stucoord[0]);
    # warn( "1 = " . $stucoord[1]);
    my $dxds = $stucoord[0]->D('s');
    my $dyds = $stucoord[1]->D('s');
    # warn( "dxds = " . $dxds );
    # warn( "dxdt = " . $dxdt );
    my $dzds = $stucoord[2]->D('s');
    my $dxdt = $stucoord[0]->D('t');
    my $dydt = $stucoord[1]->D('t');
    my $dzdt = $stucoord[2]->D('t');
    my $dxds2 = $dxds->D('s');
    my $dyds2 = $dyds->D('s');
    my $dzds2 = $dzds->D('s');
    my $dxdt2 = $dxdt->D('t');
    my $dydt2 = $dydt->D('t');
    my $dzdt2 = $dzdt->D('t');

    my @q = ( Compute($p[0]-$ncomp[1]), Compute($p[1]+$ncomp[0]),
	      Compute($p[2]) );
    my @r = ( Compute($p[0]-$ncomp[2]), Compute($p[1]),
	      Compute($p[2]+$ncomp[0]) );

    # if ( $dxds2 != 0 || $dyds2 != 0 || $dzds2 != 0 ||
    #      $dxdt2 != 0 || $dydt2 != 0 || $dzdt2 != 0 ) {
    if ( $studs2 != Vector(0,0,0) || $studt2 != Vector(0,0,0) ) {
	Value->Error("Your answer doesn't look like a plane.");
	return 0;
    } else {
        ## the points lie on the plane only if
        my $dxds = $studs . i;
        my $dxdt = $studt . i;
        my $dyds = $studs . j;
        my $dydt = $studt . j;
	if ( $dxdt*$dyds - $dxds*$dydt != 0 ) {
	    my $sx0 = $stucoord[0]->eval( s=>0, t=>0 );
	    my $sy0 = $stucoord[1]->eval( s=>0, t=>0 );
	    my $sz0 = $stucoord[2]->eval( s=>0, t=>0 );

	    ## p[0] and p[1] lie on the plane with s and t equal to
	    my $jac = $dxdt*$dyds - $dxds*$dydt;
	    my $s0 = ($dydt*($sx0-$p[0]) + $dxdt*($p[1]-$sy0))/$jac;
	    my $t0 = ($dyds*($p[0]-$sx0) + $dxds*($sy0-$p[1]))/$jac;

	    ## q[0] and q[1] lie on the plane with s and t equal to
	    my $s1 = ($dydt*($sx0-$q[0]) + $dxdt*($q[1]-$sy0))/$jac;
	    my $t1 = ($dyds*($q[0]-$sx0) + $dxds*($sy0-$q[1]))/$jac;

	    ## r[0] and r[1] lie on the plane with s and t equal to
	    my $s2 = ($dydt*($sx0-$r[0]) + $dxdt*($r[1]-$sy0))/$jac;
	    my $t2 = ($dyds*($r[0]-$sx0) + $dxds*($sy0-$r[1]))/$jac;

	    if ( $stucoord[2]->substitute( s=>$s0, t=>$t0 ) == $p[2] &&
		 $stucoord[2]->substitute( s=>$s1, t=>$t1 ) == $q[2] &&
		 $stucoord[2]->substitute( s=>$s2, t=>$t2 ) == $r[2]  ) {
		return 1;
	    } else {
		return 0;
	    }
	} else {
	    return 0;
	}
    }
} ) );

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR


To parameterize the plane we need two nonparallel vectors
\(\vec v_1\) and \(\vec v_2\) that are parallel to the plane.  Such
vectors are perpendicular to the normal  vector to the plane,
\(\vec n = $n\).   We can choose any vectors \(\vec v_1\) and
\(\vec v_2\) such that
\(\vec v_1\cdot \vec n = \vec v_2\cdot \vec n = 0\).
$PAR

One choice is
\[ \vec v_1 = $dv1, \qquad \vec v_2 = $dv2. \]

$PAR
Letting
\(\vec r_0 = $ppos\), we have
the parameterization
\[
\vec r(s, t) = \vec r_0+ s\vec v_1+t\vec v_2 =
$rparam.
\]

END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();
