##DESCRIPTION
## Parametrizing curves in space
##ENDDESCRIPTION

##KEYWORDS('Vector','Parametric','Geometry')

## DBsubject('Calculus')
## DBchapter('Vector Functions')
## DBsection('Vector Functions and Space Curves')
## Date('10/31/09')
## Author('Paul Pearson')
## Institution('Fort Lewis College')
## TitleText1('Calculus')
## TitleText2('Calculus')
## EditionText1('4')
## EditionText2('5')
## AuthorText1('Hughes-Hallett')
## AuthorText2('Hughes-Hallett')
## Section1('17.1')
## Section2('17.1')
## Problem1('39')
## Problem2('31')


DOCUMENT();      

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserVectorUtils.pl",
"PGcourse.pl",
);

TEXT( beginproblem() );

Context("Vector");
Context()->variables->add(t=>"Real");

#
#  Points on the line
#
$P = non_zero_point3D();
$Pvec = Vector($P);
$V = non_zero_vector3D();
$Q = Point($P + $V);
$Qvec = Vector($P + $V);

# 
#  Times, vectors, and lines
#
$ta0 = 0;
$ta1 = random(2,8,1);
$ta2 = Real("$ta1 - $ta0");
$Ta = Formula("t / $ta2") -> reduce;
$La = $P + $Ta * $V;


$tb0 = random(3,7,1);
$tb1 = $tb0 + random(2,4,1);
$tb2 = $tb1 - $tb0;
$Tb = Formula("(t - $tb0) / $tb2") -> reduce;
$Lb = $P + $Tb * $V;


$tc0 = 0;
$tc1 = $tc0 - random(2,4,1);
$tc2 = $tc1 - $tc0;
$Tc = Formula("(t - $tc0) / $tc2") -> reduce;
$Lc = $P + $Tc * $V;


Context()->texStrings;
BEGIN_TEXT
Find a vector parametric equation \(\vec{r}(t)\) for the line 
through the points \( P = $P \) and \( Q = $Q \)
for each of the given conditions on the parameter \( t \).
$BR
$BR
(a) If \( \vec{r}($ta0) = $Pvec \) and 
\( \vec{r}($ta1) = $Qvec \), then  
$BR
\( \vec{r}(t) = \) \{ans_rule(40)\}
$BR
$BR
(b) If \( \vec{r}($tb0) = P \) and 
\( \vec{r}($tb1) = Q \), then 
$BR
\( \vec{r}(t) = \) \{ans_rule(40)\}
$BR
$BR
(c) If the points \(P\) and \(Q\) correspond to 
the parameter values \( t = $tc0 \) and 
\( t = $tc1 \), respectively, then
$BR
\( \vec{r}(t) = \) \{ans_rule(40)\}
END_TEXT
Context()->normalStrings;

$showPartialCorrectAnswers = 1;


sub mycheck {
  my ($correct, $student, $ansHash) = @_;

  if ( 
       ($correct . i == $student . i) && 
       ($correct . j == $student . j) && 
       ($correct . k == $student . k) 
     ) 
  { return 1; } else { return 0; }

}

ANS( $La->cmp( checker=>~~&mycheck ) );
ANS( $Lb->cmp( checker=>~~&mycheck ) );
ANS( $Lc->cmp( checker=>~~&mycheck ) );


COMMENT('MathObject version');
ENDDOCUMENT();
