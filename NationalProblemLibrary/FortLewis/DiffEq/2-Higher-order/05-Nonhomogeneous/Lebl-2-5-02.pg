## DESCRIPTION
## Higher order ODEs: constant coefficient second order nonhomogeneous linear ODEs
## ENDDESCRIPTION

## KEYWORDS('differential equations','second order linear ODE','constant coefficients','nonhomogeneous')

## DBsubject('Differential Equations')
## DBchapter('Higher Order Differential Equations')
## DBsection('Second Order Linear Nonhomogeneous')
## Date('01/30/2011')
## Author('Paul Pearson')
## Institution('Fort Lewis College')
## TitleText1('Notes on Diffy Qs')
## EditionText1('December 9, 2010')
## AuthorText1('Jiri Lebl')
## Section1('2.5')
## Problem1('2')


##############################
#  Initialization

DOCUMENT(); 

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"AnswerFormatHelp.pl",
"parserAssignment.pl",
"unionLists.pl",
);

TEXT(beginproblem());


#############################
#  Setup

Context("Numeric");
Context()->variables->add(
A=>"Real",B=>"Real",y=>"Real",
'a'=>'Parameter','b'=>'Parameter'
);

$a = random(1,2,1);
$b = random(4,10,1);

# char poly (r+$b)(r-$a)
$bma = $b-$a;
$ab = $a*$b;
do { $k = random(2,7,1); } until (
   $k != $a &&
   $k != $b &&
   $k**2+$k*($b-($a))-($a*$b) != 0
);

$den = $k**2+$k*($b-($a))-($a*$b);

$diffeq = "y'' + $bma y' - $ab y = e^{$k x}"; # tex

$yparticular = Compute("1/$den e^($k x) + a e^($a x) + b e^(-$b x)");
$yhomogeneous = Compute("A e^($a x) + B e^(-$b x)");
$ygeneral = Compute("1/$den e^($k x) + A e^($a x) + B e^(-$b x)");


######################
#  Main text

Context()->texStrings;
BEGIN_TEXT
\{ BeginList('OL',type=>'a') \}

$ITEM Find a particular solution to the 
nonhomogeneous differential equation \( $diffeq \).
$BR
$BR
\( y_p = \) 
\{ ans_rule(40) \}
\{ AnswerFormatHelp("formulas") \}


$ITEMSEP
$ITEM Find the most general solution to the 
associated homogeneous differential equation.  
Use \( A \) and \( B \) in your answer to denote 
arbitrary constants.
$BR
$BR
\( y_h = \)
\{ ans_rule(40) \}
\{ AnswerFormatHelp("formulas") \}


$ITEMSEP
$ITEM Find the most general solution to the 
original nonhomogeneous differential equation.  
Use \( A \) and \( B \) in your answer to denote 
arbitrary constants.
$BR
$BR
\( y = \)
\{ ans_rule(40) \}
\{ AnswerFormatHelp("formulas") \}

\{ EndList('OL') \}
END_TEXT
Context()->normalStrings;


######################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

ANS( $yparticular->cmp() );

ANS( $yhomogeneous->cmp( 
  checker => sub {
    my ( $correct, $student, $self ) = @_;
    my $stu   = Formula($student);

    ################################
    #  Check for arbitrary constants
    #
    Value->Error("Is your answer the most general solution?") 
    if ( 
      Formula($stu->D('A'))==Formula(0) || 
      Formula($stu->D('B'))==Formula(0) 
    );

    ############################################
    #  Check for linear independence (Wronskian)
    #
    my $x = Real(1.24);

    my $a11 = $stu->eval(A=>1,B=>0,x=>$x,y=>0);
    my $a12 = $stu->eval(A=>0,B=>1,x=>$x,y=>0);
 
    my $a21 = $stu->D('x')->eval(A=>1,B=>0,x=>$x,y=>0);
    my $a22 = $stu->D('x')->eval(A=>0,B=>1,x=>$x,y=>0);

    my $wronskian = $a11*$a22 - $a21*$a12;

    Value->Error("Your functions are not linearly independent or your answer is not complete") 
    if ($wronskian==Real(0));

    ########################################################
    #  Check that the student answer is a solution to the DE
    #
    my $stux  = Formula($stu->D('x'));
    my $stuxx = Formula($stu->D('x','x'));
    my $stuDE = Formula($stuxx+$bma*$stux - $ab*$stu)
    ->with(test_points=>[[1,1,1,0],[1,1,0,0],[2,1,1,0],[1,2,0,0]]);

    return ($stuDE==Formula(0));

}));



ANS( $ygeneral->cmp( checker => sub {
    my ( $correct, $student, $self ) = @_;
    my $stu   = Formula($student);

    ################################
    #  Check for arbitrary constants
    #
    Value->Error("Is your answer the most general solution?") 
    if ( 
      Formula($stu->D('A'))==Formula(0) || 
      Formula($stu->D('B'))==Formula(0) 
    );

    ############################################
    #  Check for linear independence (Wronskian)
    #
    my $x = Real(1.24);

    my $a11 = $stu->eval(A=>1,B=>0,x=>$x,y=>0);
    my $a12 = $stu->eval(A=>0,B=>1,x=>$x,y=>0);
 
    my $a21 = $stu->D('x')->eval(A=>1,B=>0,x=>$x,y=>0);
    my $a22 = $stu->D('x')->eval(A=>0,B=>1,x=>$x,y=>0);

    my $wronskian = $a11*$a22 - $a21*$a12;

    Value->Error("Your functions are not linearly independent or your answer is not complete") 
    if ($wronskian==Real(0));

    ########################################################
    #  Check that the student answer is a solution to the DE
    #
    my $stux  = Formula($stu->D('x'));
    my $stuxx = Formula($stu->D('x','x'));
    my $stuDE = Formula($stuxx+$bma*$stux - $ab*$stu)
    ->with(test_points=>[[1,1,1,0],[1,1,0,0],[2,1,1,0],[1,2,0,0]]);

    return ($stuDE==Formula("e^($k x)"));

}));


COMMENT("MathObject version.");

ENDDOCUMENT();