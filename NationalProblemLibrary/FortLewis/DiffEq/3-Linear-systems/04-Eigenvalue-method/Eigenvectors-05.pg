## DESCRIPTION
## Eigenvalues and systems of differential equations
## ENDDESCRIPTION

## KEYWORDS ('linear algebra','matrix','eigenvalue','eigenvector','systems','systems of differential equations')

## DBsubject('Calculus')
## DBchapter('Differential Equations')
## DBsection('Systems of Differential Equations')
## Date('03/19/2011')
## Author('Anonymous and Paul Pearson')
## Institution('Rochester and Fort Lewis College')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

## Original: Library/Rochester/setLinearAlgebra11Eigenvalues/ur_la_11_6.pg

####################################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGmatrixmacros.pl",
"MathObjects.pl",
"parserMultiAnswer.pl",
"unionLists.pl",
"answerHints.pl",
);

TEXT(beginproblem());


#####################################
#  Setup

Context("Numeric")->variables->are(t=>"Real");

$a = new Matrix(2,2);
# define matrix
        $a11 = random(-1,1,2);
        $a12 = non_zero_random(-3,3,1);
        $mult = non_zero_random(-2,2,1);
        $a21 = $mult * $a11;
        $b1 = random(-1,1,2);
        $a22 = $mult * $a12 + $b1;

        $a->assign(1,1, $a11 );
        $a->assign(1,2, $a12 );
        $a->assign(2,1, $a21 );
        $a->assign(2,2, $a22 );
        $a_lr = $a->decompose_LR();
        $a_det = $a11 * $b1;

# define inverse matrix
	$b = $a_lr->invert_LR();

# define eigenvalues
    $e = new Matrix(2,2);
    $e->one();
    $e->assign(1,1, non_zero_random(-8,8,1));
    $e->assign(2,2, non_zero_random(-8,8,1));
# make sure that the eigenvalues are distinct
	while ($e->element(1,1) == $e->element(2,2)) { $e->assign(2,2, non_zero_random(-8,8,1)); } 

# define final matrix
	$matrix = $a * $e *$b;
	$matrix_lr = $matrix->decompose_LR();
	$matrix_det = $matrix_lr->det_LR();

$m11 = $matrix->element(1,1);
$m12 = $matrix->element(1,2);
$m21 = $matrix->element(2,1);
$m22 = $matrix->element(2,2);


$C1 = non_zero_random(-3,3,1);
$C2 = non_zero_random(-3,3,1);


if ( $e->element(1,1) < $e->element(2,2) ) {

$eval1 = $e->element(1,1);
$eval2 = $e->element(2,2);

$evects = MultiAnswer($a11, $a21, $a12, $a22)->with(
    singleResult => 1,
    checkTypes => 0,
    allowBlankAnswers => 1,
    format =>  "Eigenvectors = (%s, %s), (%s, %s)",
    tex_format =>  "\text{Eigenvectors }= (%s, %s), (%s, %s)" ,
    checker => sub {
        my ($correct, $student, $self ) = @_;
	my ($stuv11, $stuv12, $stuv21, $stuv22) = @{$student}[0..3];
        my $flag  = 0;
        my $flag1 = 0;
        my $flag2 = 0;
        my $counter = 0;
        if ($stuv11 && $stuv12) {
           my $v1 = new Matrix(2, 1);
           if($stuv11 != 0 || $stuv12 !=0){
             $v1-> assign(1,1, $stuv11);
             $v1-> assign(2,1, $stuv12);
             if( $matrix * $v1 == $eval1 * $v1){
                $flag1=1;
             }
           }
        }
        if($stuv21 && $stuv22){
           my $v2 = new Matrix(2, 1);
           if($stuv21 != 0 || $stuv22 !=0){
             $v2-> assign(1,1, $stuv21);
             $v2-> assign(2,1, $stuv22);
             if( $matrix * $v2 == $eval2 * $v2){
               $flag2=1;
             }
           }
        }
        if($flag1==1 && $flag2 ==1){
           $flag=1;
        }else{
           if($flag1 + $flag2 == 1){
              Value::Error("One of the eigenvectors is correct. Did you enter them in the correct order?");
           }else{
              Value::Error("Neither of the eigenvectors is correct. Did you enter them in the correct order?");
           }
        }
        return $flag; 
       
    }
);

$x1init = Real("$C1 * $a11 + $C2 * $a12");
$x2init = Real("$C1 * $a21 + $C2 * $a22");

$x1 = Compute("$C1 * $a11 e^($eval1 t) + $C2 * $a12 e^($eval2 t)");
$x2 = Compute("$C1 * $a21 e^($eval1 t) + $C2 * $a22 e^($eval2 t)");

} else {

$eval1 = $e->element(2,2);
$eval2 = $e->element(1,1);

$evects = MultiAnswer($a12, $a22, $a11, $a21)->with(
    singleResult => 1,
    checkTypes => 0,
    allowBlankAnswers => 1,
    format =>  "Eigenvectors = (%s, %s), (%s, %s)",
    tex_format =>  "\text{Eigenvectors }= (%s, %s), (%s, %s)" ,
    checker => sub {
        my ($correct, $student, $self ) = @_;
	my ($stuv11, $stuv12, $stuv21, $stuv22) = @{$student}[0..3];
        my $flag  = 0;
        my $flag1 = 0;
        my $flag2 = 0;
        my $counter = 0;
        if ($stuv11 && $stuv12) {
           my $v1 = new Matrix(2, 1);
           if($stuv11 != 0 || $stuv12 !=0){
             $v1-> assign(1,1, $stuv11);
             $v1-> assign(2,1, $stuv12);
             if( $matrix * $v1 == $eval1 * $v1){
                $flag1=1;
             }
           }
        }
        if($stuv21 && $stuv22){
           my $v2 = new Matrix(2, 1);
           if($stuv21 != 0 || $stuv22 !=0){
             $v2-> assign(1,1, $stuv21);
             $v2-> assign(2,1, $stuv22);
             if( $matrix * $v2 == $eval2 * $v2){
               $flag2=1;
             }
           }
        }
        if($flag1==1 && $flag2 ==1){
           $flag=1;
        }else{
           if($flag1 + $flag2 == 1){
              Value::Error("One of the eigenvectors is correct");
           }else{
              Value::Error("Neither of the eigenvectors is correct");
           }
        }
        return $flag; 
       
    }
);

$x1init = Real("$C1 * $a12 + $C2 * $a11");
$x2init = Real("$C1 * $a22 + $C2 * $a21");

$x1 = Compute("$C1 * $a12 e^($eval1 t) + $C2 * $a11 e^($eval2 t)");
$x2 = Compute("$C1 * $a22 e^($eval1 t) + $C2 * $a21 e^($eval2 t)");

}





######################################
#  Main text

Context()->texStrings;
BEGIN_TEXT
\{ BeginList('OL',type=>'a') \}

$ITEM
Find the eigenvalues and eigenvectors of the matrix
\( 
\displaystyle
\left\lbrack
\begin{array}{rr}
$m11 & $m12 \\
$m21 & $m22
\end{array}
\right\rbrack.
\)
$BR
$BR
The smaller eigenvalue is \( \lambda_1 = \) \{ans_rule(10) \},
and the larger eigenvalue is \( \lambda_2 = \) \{ ans_rule(10) \}.
$BR
The corresponding eigenvectors are
\{ 
mbox(
[
'\( \vec{v}_1 =  \) ', 
display_matrix([[$evects->ans_rule(5)],[$evects->ans_rule(5)]]),
' and \( \vec{v}_2 =  \) ', 
display_matrix([[$evects->ans_rule(5)],[$evects->ans_rule(5)]]),
],
allowbreaks=>'yes'
) 
\}



$ITEMSEP
$ITEM
Solve the system of differential equations
\( 
\displaystyle
\vec{x}^{\, \prime}
=
\left\lbrack
\begin{array}{rr}
$m11 & $m12 \\
$m21 & $m22
\end{array}
\right\rbrack
\vec{x}
\)
satisfying the initial conditions
\(
\displaystyle
\left\lbrack
\begin{array}{r}
x_1(0) \\
x_2(0)
\end{array}
\right\rbrack
=
\left\lbrack
\begin{array}{r}
$x1init \\
$x2init
\end{array}
\right\rbrack.
\)
$BR
$BR
\( x_1(t) = \) \{ ans_rule(40) \}
$BR
\( x_2(t) = \) \{ ans_rule(40) \}

\{ EndList('OL') \}
END_TEXT
Context()->normalStrings;


#######################################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

ANS( Real($eval1)->cmp() 
->withPostFilter(AnswerHints( 
  Real("$eval2") => "Enter the smaller eigenvalue in this answer box.",
))
);
ANS( Real($eval2)->cmp()
->withPostFilter(AnswerHints( 
  Real("$eval1") => "Enter the larger eigenvalue in this answer box.",
))
);
ANS( $evects->cmp() );

ANS( $x1->cmp() );
ANS( $x2->cmp() );

COMMENT('MathObject version.  Randomized with distinct real eigenvalues and integral answers.');

ENDDOCUMENT(); 