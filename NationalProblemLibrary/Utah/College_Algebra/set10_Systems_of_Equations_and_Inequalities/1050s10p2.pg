## Author('Utah ww group')
## Institution('Univeristy of Utah')
## DBsubject('Algebra')
## DBchapter('Exponential and Logarithmic Functions')
## DBsection('Applications of Exponential and Logarithmic Functions')
## AuthorText1('Ron Larson and Robert  Hostetler')
## TitleText1('Precalculus')
## EditionText1('7')
## Section1('Exponential and Logarithmic Functions')
## Problem1('')
## KEYWORDS('algebra')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(&beginproblem);


TEXT(EV2(<<EOT)); 

In this problem, all answers need to be decimal expressions.

$BR

You are growing bacteria.  From your initial experiments you know that
these particular bacteria double the size of their population every
hour in the presence of unlimited resources.  You start with a
population of 1 unit (like a million bacteria, say) and you let them
grow in an environment that allows a stable population of 100 units.
You model the size of your population with a logistic curve.
Accordingly, the size of your population in your chosen units after
\(x\) hours is given by
\[f(x) = \frac{a}{1+be^{-rx}}\] where
$BR
\(a=\)  \{ ans_rule(10) \},

EOT
&ANS( num_cmp(100));

TEXT(EV2(<<EOT)); 
$BR
\( b = \) \{ ans_rule(10) \},
EOT
&ANS( num_cmp(99));

TEXT(EV2(<<EOT)); 
$BR
\( r = \) \{ ans_rule(10) \},  and the population after \(8\) hours is
EOT
&ANS( num_cmp(log(2)));

TEXT(EV2(<<EOT)); 
$BR
\( f(8) = \) \{ ans_rule(10) \} units.
EOT
&ANS( num_cmp(100/(1+99*exp(-log(2)*8))));

TEXT(EV3(<<'EOT'));
$BR $BBOLD Hint:$EBOLD First compute \(r\), then \(a\), and then \(b\).
EOT

SOLUTION(EV3(<<'EOT')); 
$BR $BBOLD Solution:$EBOLD \(r\) is such that the population doubles
every hour.  Thus it is the solution of
\[e^r = 2,\]
in other words, \[r = \ln 2.\]
\(a\) is the eventual population, i.e., \[a = 100.\]
At time \(0\) the population is 
\[f(0) = \frac{100}{ 1 + b} = 1\]
Hence \[1+b = 100,\]
or \[b = 99.\]

EOT





ENDDOCUMENT();        # This should be the last executable line in the problem.
