## DESCRIPTION
## Algebra
## ENDDESCRIPTION

## KEYWORDS('algebra','function','composition of functions')
## Tagged by cmd6a 8/6/06

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Combining Functions')
## Date('8/23/07')
## Author('K. Lesh')
## Institution('Union College')
## TitleText1('Calculus')
## EditionText1('7')
## AuthorText1('Anton')
## Section1('1.4')
## Problem1('47')

DOCUMENT();                  # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGunion.pl",            # Union College utilities
  "MathObjects.pl",
  "answerComposition.pl",  # answer checker for compositions
  "PGcourse.pl",           # Customization file for the course
);

TEXT(beginproblem);

###################################
# Setup

Context("Numeric");

$a = random(2,9,1);
$b = non_zero_random(-6,6,1);

#
#  for limits in function compare
#  (avoids division by sero or roots of negatives).
#

$m0 = abs($b)+.1;
$m1 = sqrt(abs($b)/$a)+.1;

#
#  List function compositions as ["f","g"].
#  (The answer is given in its two parts so that
#  if the student requests answers, it can give them.)
#  You can also give optional parameters, like the limits
#  in several of the functions below.
#

$x = Formula("x");
$linear = $a*$x+$b;
$quadratic = $a*$x**2-$b;

@flist = (
  [sin($x),$linear],
  [sin($x),$a*$x**2],
  [sqrt($x),$quadratic,limits=>[$m1,$m1+1]],
  [1/$x,$linear,limits=>[$m0,$m0+1]],
  [cos($x),$linear],
  [sqrt($x),$linear,limits=>[$m0,$m0+1]]
);

#
#  Get a random function from the list
#
$i = random(0,$#flist,1);
($f,$g,%params) = @{$flist[$i]};
$fog = $f->substitute(x=>$g);

###################################
# Main text

Context()->texStrings;
BEGIN_TEXT
Write the function  \(h(x) = $fog\)
as the composition of two functions \(f(g(x))\).
  $PAR
  \(f(x)\) = \{ans_rule(20)\}
$PAR
  \(g(x)\) = \{ans_rule(20)\}
  $PAR
  Do not use the identity function as one of your answers. That is, do
  not use  \(f(x)=x\) or  \(g(x)=x\).
END_TEXT
Context()->normalStrings;

###################################
# Answers

$showPartialCorrectAnswers = 0;

COMPOSITION_ANS($f,$g,%params);

install_problem_grader(~~&std_problem_grader);  # all answers must be correct

##################################################

ENDDOCUMENT();        # This should be the last executable line in the problem.
