##DESCRIPTION
## Introduction to Functions
## 
##ENDDESCRIPTION
## DBsubject('Intermediate Algebra')
## DBchapter('Ch 02: Functions and Linear Functions')
## DBsection('Introduction to Functions')
## KEYWORDS('functions')
## TitleText1('Essentials of Intermediate Algebra')
## EditionText1('1')
## AuthorText1('Blitzer')
## Section1('2.1')
## Problem1('')
## Author('RA Cruz')
## Institution('The College of Idaho')
## Date: 2007/09

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "contextLimitedNumeric.pl",
  "contextInequalities.pl",
  "answerHints.pl",
  "PGnauGraphics.pl"
);

TEXT(beginproblem());

######################################
#  Setup

Context("Numeric");

#--------Define the function-----------

@xnum = (random(-5,-3,1),random(3,5,1));  #Stay in the grid
@ynum = (random(-5,-3,1),random(3,5,1));

$m = ($ynum[1] - $ynum[0])/($xnum[1] - $xnum[0]);
$b = $ynum[0] - $m * $xnum[0];

$f = Formula("$m * x + $b");

@interval = ("[$xnum[0],$xnum[1])","($xnum[0],$xnum[1]]");
$n = random(0,1,1);                      

#------------Define the graph-----------------------

$choose = random(0,2,1);
@colors = ("blue", "red", "green");
$rc = $colors[$choose];   #Pick a random color

$xmin = -6;
$ymin = -6;
$xmax = 6;
$ymax = 6;

$graph = init_graph_no_labels($xmin,$ymin,$xmax,$ymax,
                             'axes'=>[0,0],'grid'=>[$xmax-$xmin,$ymax-$ymin]);
$f_graph = FEQ("$f for x in $interval[$n] using color:$rc and weight:3");
add_functions( $graph,$f_graph );

$label = new Label($xmin+1,$ymax-.5, "y = g(x)",'black','center');
$graph->lb($label);

$i = 0;           # Number the axes
do {
  $xtick = $i + $xmin + 1;
  $labelx[$i] = new Label($xtick,0, "$xtick",'black','center');
  if ($xtick!=0) {$graph->lb($labelx[$i]);}
  $i =$i+1;
} while ($i<($xmax-$xmin)-1);

$i = 0;
do {
  $ytick = $i +$ymin + 1;
  $labely[$i] = new Label(-.2,$ytick+.1, "$ytick",'black','center');
  if ($ytick!=0) {$graph->lb($labely[$i]);} 
  $i =$i+1;
} while ($i<($ymax-$ymin)-1);

#------------Pick the points---------------

@n = (random($xnum[0]+1,$xnum[1]-1,1), $xnum[$n]);
@slice = NchooseK(2,2);
@input = @n[@slice];
@answer = ($f->eval(x=>$input[0]), $f->eval(x=>$input[1]));  

######################################
#  Main text (part 1)
#  Note:  tex_size=>n is for the size on the hardcopy: 600=60%

BEGIN_TEXT
\{ Plot($graph,tex_size=>600) \} 
$BR $BR
Use the graph of \(y=f(x)\) given above to find:
$PAR
a) \( f($input[0]) \) = \{ans_rule(10)\}
$PAR
b) \( f($input[1]) \) = \{ans_rule(10)\}
END_TEXT

######################################
#  Answers (part 1)

Context("LimitedNumeric");
Context()->strings->add("No solution"=>{alias=>"DNE"}, 
                        "All real numbers"=>{alias=>"R"});

$ans_a = Real($answer[0])->with(tolerance=>0.15, tolType=>'absolute');
ANS($ans_a->cmp(ignoreStrings => 1));

$ans_b = Real($answer[1])->with(tolerance=>0.15, tolType=>'absolute');
ANS($ans_b->cmp(ignoreStrings => 1));

$showPartialCorrectAnswers = 1;


######################################
#  Main text (part 2)

BEGIN_TEXT
$PAR
c) The domain: \{ans_rule(20)\}
$PAR
d) The range: \{ans_rule(20)\}
END_TEXT

######################################
#  Answers  (part 2)

Context("Inequalities");
Context()->variables->add(y=>'Real');
Context()->strings->add("All real numbers"=>{},"R"=>{alias=>"All real numbers"});

@domain = ("$xnum[0] <= x < $xnum[1]", "$xnum[0] < x <= $xnum[1]");
$ans_c = Compute($domain[$n]);
ANS($ans_c->cmp->withPostFilter(AnswerHints(
            sub {
                my ($correct,$student,$ans) = @_;
                return $student =~ /y/;
                } => ["Use the variable $BITALIC x $EITALIC for the domain of a function.", 
                      checkCorrect => 1, 
                      score => 0]
)));

$ran1 = $f->eval(x=>$xnum[0]);
$ran2 = $f->eval(x=>$xnum[1]);
if ($ran2<$ran1) {
    $ran2 = $ran1;
    $ran1 = $f->eval(x=>$xnum[1]);
}
@range = ("$ran1 <= y < $ran2", "$ran1 < y <= $ran2");
$ans_d = Compute($range[$n]);
ANS($ans_d->cmp->withPostFilter(AnswerHints(
            sub {
                my ($correct,$student,$ans) = @_;
                return $student =~ /x/;
                } => ["Use the variable $BITALIC y $EITALIC for the range of a function.", 
                      checkCorrect => 1, 
                      score => 0]
)));

$showPartialCorrectAnswers = 1;

######################################

ENDDOCUMENT(); # This should be the last executable line in the problem.
