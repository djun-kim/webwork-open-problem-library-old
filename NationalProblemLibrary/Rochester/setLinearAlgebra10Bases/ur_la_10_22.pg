## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS ('linear algebra','matrix','vector space','basis','image','kernel','dimension')
## Tagged by cmd6a 4/29/06

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Image and Kernel')
## Date('')
## Author('')
## Institution('Rochester')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGmatrixmacros.pl", 
"PGnumericalmacros.pl",
"PGauxiliaryFunctions.pl",
"PGmorematrixmacros.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

# m by n matrix of rank k, 
# dim ker = n-k
# dim im = k 

$m = random(3,4,1);
if ($m==3) { 
	$n = random(3,4,1);
} else { 
	$n = 3;
}
$k = random(1,2,1);

$ker = $n - $k;
$im = $k;

$A = new Matrix($m,$n);

# first create a 2 by 2 matrix of rank k
# then will add column(s) and row(s) that are linear combinations of the first two columns/rows 

if ($k == 1) {
        $a = random(-2,2,1);
        $b = non_zero_random(-2,2,1);
        $k = non_zero_random(-2,2,1);
        $l = random(-2,2,1);
        $a[1][1] = $k*$a;
        $a[1][2] = $k*$b;
        $a[2][1] = $l*$a;
        $a[2][2] = $l*$b;
} else {
        $a[1][1] = random(-4,4,1);
        $a[1][2] = random(-3,3,2);
        $a[2][1] = random(-3,3,2);
        $a[2][2] = random(-4,4,2);
}

$A -> assign(1,1,$a[1][1]);
$A -> assign(1,2,$a[1][2]);
$A -> assign(2,1,$a[2][1]);
$A -> assign(2,2,$a[2][2]);

$p = random(-2,2,1);
$q = random(-2,2,1);
$r = random(-2,2,1);
$s = random(-2,2,1);   
$t = random(-2,2,1);
$u = random(-2,2,1);   
        
$a[1][3] = $p*$a[1][1] + $q*$a[1][2];
$a[2][3] = $p*$a[2][1] + $q*$a[2][2];

$a[3][1] = $r*$a[1][1] + $s*$a[2][1];
$a[3][2] = $r*$a[1][2] + $s*$a[2][2];
$a[3][3] = $r*$a[1][3] + $s*$a[2][3];

if ($m == 4) { 
	$a[4][1] = $t*$a[1][1] + $u*$a[2][1];
	$a[4][2] = $t*$a[1][2] + $u*$a[2][2];
	$a[4][3] = $t*$a[1][3] + $u*$a[2][3];
} 

if ($n == 4) { 
	$a[1][4] = $t*$a[1][1] + $u*$a[1][2];
	$a[2][4] = $t*$a[2][1] + $u*$a[2][2];
	$a[3][4] = $t*$a[3][1] + $u*$a[3][2];
} 

foreach $i (1..$m) { 
	foreach $j (1..$n) { 
	        $A -> assign($i, $j, $a[$i][$j]);
	}
}

BEGIN_TEXT
\{ mbox( 'Let \(A=\)', display_matrix($A), '.' ) \}
$BR
Find dimensions of the kernel and image of \(A\) (or the linear transformation \(T(x)=Ax\)).
$BR
\( {\rm dim } ({\rm Ker } (A)) = \) \{ans_rule(5)\}, 
$BR
\( {\rm dim } ({\rm Im } (A)) = \) \{ans_rule(5)\}. 

END_TEXT

ANS(num_cmp($ker));
ANS(num_cmp($im));

ENDDOCUMENT();       # This should be the last executable line in the problem.

