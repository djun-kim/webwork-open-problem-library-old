##DESCRIPTION
##KEYWORDS('matrix', 'LU', 'LDU', 'factorization', 'system', 'linear')
##
##ENDDESCRIPTION

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGmatrixmacros.pl", 
"PGnumericalmacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$L = new Matrix(3,3);
$L -> assign(1,1,1);
$L -> assign(1,2,0);
$L -> assign(1,3,0);
$L -> assign(2,1,non_zero_random(-5,5,1));
$L -> assign(2,2,1);
$L -> assign(2,3,0);
$L -> assign(3,1,non_zero_random(-5,5,1));
$L -> assign(3,2,random(-5,5,1));
$L -> assign(3,3,1);

$D = new Matrix(3,3);
$D -> assign(1,1,non_zero_random(-5,5,1));
$D -> assign(1,2,0);
$D -> assign(1,3,0);
$D -> assign(2,1,0);
$D -> assign(2,2,non_zero_random(-5,5,1));
$D -> assign(1,3,0);
$D -> assign(3,1,0);
$D -> assign(3,2,0);
$D -> assign(3,3,non_zero_random(-5,5,1));

$U = new Matrix(3,3);
$U -> assign(1,1,1);
$U -> assign(1,2,non_zero_random(-5,5,1));
$U -> assign(1,3,random(-5,5,1));
$U -> assign(2,1,0);
$U -> assign(2,2,1);
$U -> assign(2,3,random(-5,5,1));
$U -> assign(3,1,0);
$U -> assign(3,2,0);
$U -> assign(3,3,1);

$A = new Matrix(3,3);
$A = $L * $D * $U;

BEGIN_TEXT

\{ mbox( 'Find the LDU factorization of \(A=\)', display_matrix($A), '.' ) \}
$BR
\( A=LDU \) where 
$BR
\{ mbox( '\(L=\)', answer_matrix(3,3,5), ',' ) \}
$BR
\{ mbox( '\(D=\)', answer_matrix(3,3,5), ',' ) \}
$BR
\{ mbox( '\(U=\)', answer_matrix(3,3,5), '.' ) \}

END_TEXT

ANS(num_cmp(ra_flatten_matrix($L)));
ANS(num_cmp(ra_flatten_matrix($D)));
ANS(num_cmp(ra_flatten_matrix($U)));

ENDDOCUMENT();       # This should be the last executable line in the problem.

