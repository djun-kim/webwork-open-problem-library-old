## DESCRIPTION
##   Complex Roots
## ENDDESCRIPTION

## KEYWORDS('Complex', 'Root')
## Tagged by nhamblet

## DBsubject('Algebra')
## DBchapter('Equations and Inequalities')
## DBsection('Complex Numbers')
## Date('')
## Author('')
## Institution('Rochester')
## TitleText1('Fundamentals of Complex Analysis for Mathematics, Science, and Engineering')
## EditionText1('')
## AuthorText1('E.B. Saff and A.D. Snider')
## Section1('1.5')
## Problem1('5')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"PGcomplexmacros.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$one = (random( 2, 4, 1 ) )**4;

BEGIN_TEXT
Find all the values of the following.
$BR
(1) \( (-$one)^\frac{1}{4} \) 
$BR 
Place all answers in the following blank, separated by commas:
$BR 
\{ans_rule(80)\}
$BR 
(2) \( 1^\frac{1}{5} \) 
$BR 
Place all answers in the following blank, separated by commas:
$BR 
\{ans_rule(80)\}
$BR 
(3) \( i^\frac{1}{4} \) 
$BR 
Place all answers in the following blank, separated by commas:
$BR 
\{ans_rule(80)\} 
END_TEXT	

$a = new Complex( sqrt(sqrt($one))*cos($PI/4) , sqrt(sqrt($one))*sin($PI/4));
$b = new Complex( sqrt(sqrt($one))*cos( 3*$PI/4) , sqrt(sqrt($one)) * sin(3*$PI/4));
$c = new Complex( sqrt(sqrt($one))*cos(5*$PI/4) , sqrt(sqrt($one))*sin(5*$PI/4));
$d = new Complex( sqrt(sqrt($one))*cos(7*$PI/4) , sqrt(sqrt($one))*sin(7*$PI/4));
$f = new Complex( cos(2*$PI/5) , sin(2*$PI/5));
$g = new Complex( cos(4*$PI/5) , sin(4*$PI/5));
$h = new Complex( cos(6*$PI/5) , sin(6*$PI/5));
$j = new Complex( cos(8*$PI/5) , sin(8*$PI/5));
$k = new Complex( cos($PI/8) , sin($PI/8));
$l = new Complex( cos(5*$PI/8) , sin(5*$PI/8));
$m = new Complex( cos(9*$PI/8) , sin(9*$PI/8));
$n = new Complex( cos(13*$PI/8) , sin(13*$PI/8));

ANS(multi_cmp( [ cplx_cmp($a), cplx_cmp($b), cplx_cmp($c), cplx_cmp($d) ] ));
ANS(multi_cmp( [ cplx_cmp(1), cplx_cmp($f), cplx_cmp($g), cplx_cmp($h), cplx_cmp($j) ] ));
ANS(multi_cmp( [ cplx_cmp($k), cplx_cmp($l), cplx_cmp($m), cplx_cmp($n)] ));

ENDDOCUMENT();        # This should be the last executable line in the problem.

