##DESCRIPTION
##KEYWORDS('exponentials', 'logarithms', 'integrals')
##Compute logarithms like Napier using a spreadsheet
##Then relate to area under 1/x like Gregory St. Vincent in 1647
##Authored by Zig Fiedorowicz 2/27/2000
##ENDDESCRIPTION

DOCUMENT();

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

$showPartialCorrectAnswers = 1;

TEXT(beginproblem());
BEGIN_TEXT
The solution \(x\) to the exponential equation
\[a^x= b\]
with \(a\) and \(b\) given numbers is denoted \(x=\log_a b\).
Thus in problems 1 and 2 you were computing \(\mbox{Int}(\log_{1.1}2)\),
\(\mbox{Int}(\log_{1.001}2)\), \(\mbox{Int}(\log_{1.1}3)\) and
\(\mbox{Int}(\log_{1.001}3)\) (where \(\mbox{Int}(\ )\) denotes the integer
part), as well as approximations to \(\log_2 3\).
$PAR
Continue your calculations from the first part of problem 2 and compare your
results with those you get computing natural logarithms (using a calculator or
spreadsheet).
$PAR

\(\mbox{Int}(\log_{1.001}2)\) = \{ ans_rule()\}
$BR
while
\(\ln 2\)  = \{ ans_rule()\}
$BR

\(\mbox{Int}(\log_{1.001}3)\) = \{ ans_rule()\}
$BR
while
\(\ln 3\)  = \{ ans_rule()\}
$BR

\(\mbox{Int}(\log_{1.001}4)\) = \{ ans_rule()\}
$BR
while
\(\ln 4\)  = \{ ans_rule()\}
$BR

\(\mbox{Int}(\log_{1.001}5)\) = \{ ans_rule()\}
$BR
while
\(\ln 5\)  = \{ ans_rule()\}
$BR

\(\mbox{Int}(\log_{1.001}6)\) = \{ ans_rule()\}
$BR
while
\(\ln 6\)  = \{ ans_rule()\}
$BR

$PAR
\(\mbox{Int}(\log_{1.001}7)\) = \{ ans_rule()\}
$BR
while
\(\ln 7\)  = \{ ans_rule()\}
$BR

\(\mbox{Int}(\log_{1.001}8)\) = \{ ans_rule()\}
$BR
while
\(\ln 8\)  = \{ ans_rule()\}
$BR

\(\mbox{Int}(\log_{1.001}9)\) = \{ ans_rule()\}
$BR
while
\(\ln 9\)  = \{ ans_rule()\}
$BR

\(\mbox{Int}(\log_{1.001}10)\) = \{ ans_rule()\}
$BR
while
\(\ln 10\)  = \{ ans_rule()\}
$BR
END_TEXT

ANS(num_cmp(int(log(2)/log(1.001)), mode=>"strict", relTol=>0));
ANS(num_cmp(log(2), mode=>"strict"));
ANS(num_cmp(int(log(3)/log(1.001)), mode=>"strict", relTol=>0));
ANS(num_cmp(log(3), mode=>"strict"));
ANS(num_cmp(int(log(4)/log(1.001)), mode=>"strict", relTol=>0));
ANS(num_cmp(log(4), mode=>"strict"));
ANS(num_cmp(int(log(5)/log(1.001)), mode=>"strict", relTol=>0));
ANS(num_cmp(log(5), mode=>"strict"));
ANS(num_cmp(int(log(6)/log(1.001)), mode=>"strict", relTol=>0));
ANS(num_cmp(log(6), mode=>"strict"));
ANS(num_cmp(int(log(7)/log(1.001)), mode=>"strict", relTol=>0));
ANS(num_cmp(log(7), mode=>"strict"));
ANS(num_cmp(int(log(8)/log(1.001)), mode=>"strict", relTol=>0));
ANS(num_cmp(log(8), mode=>"strict"));
ANS(num_cmp(int(log(9)/log(1.001)), mode=>"strict", relTol=>0));
ANS(num_cmp(log(9), mode=>"strict"));
ANS(num_cmp(int(log(10)/log(1.001)), mode=>"strict", relTol=>0));
ANS(num_cmp(log(10), mode=>"strict"));

ENDDOCUMENT();
