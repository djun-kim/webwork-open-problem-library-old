##DESCRIPTION
##KEYWORDS('dot product', 'inner product', 'matrix', 'orthogonal', 'projection')
##
##ENDDESCRIPTION

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGmatrixmacros.pl", 
"PGnumericalmacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$b = non_zero_random(-5,5,1);
$c = non_zero_random(-4,4,1);
$d = non_zero_random(-4,4,1);

$x1 = random(-1,1,2);
$x2 = random(-1,1,2);
$x3 = random(-1,1,2);
$x4 = random(-1,1,2);

$y1 = ($b + $c)*$x1;
$y2 = ($b + $d)*$x2;
$y3 = ($b - $c)*$x3;
$y4 = ($b - $d)*$x4;

@x = ($x1, $x2, $x3, $x4);
@y = ($y1, $y2, $y3, $y4);

## let z=y-x, then x,z form an orthogonal basis for the subspace. 

$norm_z2 = 2*$c*$c + 2*$d*$d;

@s = NchooseK(4,4);

# image of (1,0,0,0): 

$a[0][0] = 1/4 + $c*$c/$norm_z2;
$a[0][1] = $x1*$x2/4 + $c*$x1*$d*$x2/$norm_z2;
$a[0][2] = $x1*$x3/4 - $c*$x1*$c*$x3/$norm_z2;
$a[0][3] = $x1*$x4/4 - $c*$x1*$d*$x4/$norm_z2;

# image of (0,1,0,0):

$a[1][0] = $x2*$x1/4 + $d*$x2*$c*$x1/$norm_z2;
$a[1][1] = 1/4 + $d*$d/$norm_z2;
$a[1][2] = $x2*$x3/4 - $d*$x2*$c*$x3/$norm_z2;
$a[1][3] = $x2*$x4/4 - $d*$x2*$d*$x4/$norm_z2;

# image of (0,0,1,0):

$a[2][0] = $x3*$x1/4 - $c*$x3*$c*$x1/$norm_z2;
$a[2][1] = $x3*$x2/4 - $c*$x3*$d*$x2/$norm_z2;
$a[2][2] = 1/4 + $c*$c/$norm_z2;
$a[2][3] = $x3*$x4/4 + $c*$x3*$d*$x4/$norm_z2;

# image of (0,0,0,1):

$a[3][0] = $x4*$x1/4 - $d*$x4*$c*$x1/$norm_z2;
$a[3][1] = $x4*$x2/4 - $d*$x4*$d*$x2/$norm_z2;
$a[3][2] = $x4*$x3/4 + $d*$x4*$c*$x3/$norm_z2;
$a[3][3] = 1/4 + $d*$d/$norm_z2;

BEGIN_TEXT

Let \(W\) be the subspace of \( {\mathbb R}^3 \) spanned by the vectors 
\{ mbox( display_matrix([[$x[$s[0]]], [$x[$s[1]]], [$x[$s[2]]], [$x[$s[3]]]]), ' and ', 
	 display_matrix([[$y[$s[0]]], [$y[$s[1]]], [$y[$s[2]]], [$y[$s[3]]]]), '.'  ) \}
Find the matrix \(A\) of the orthogonal projection onto \(W\). 
$BR
\{ mbox( '\(A=\)', answer_matrix(4,4), '.' ) \}

END_TEXT

ANS(num_cmp($a[$s[0]][$s[0]]));
ANS(num_cmp($a[$s[1]][$s[0]]));
ANS(num_cmp($a[$s[2]][$s[0]]));
ANS(num_cmp($a[$s[3]][$s[0]]));
ANS(num_cmp($a[$s[0]][$s[1]]));
ANS(num_cmp($a[$s[1]][$s[1]]));
ANS(num_cmp($a[$s[2]][$s[1]]));
ANS(num_cmp($a[$s[3]][$s[1]]));
ANS(num_cmp($a[$s[0]][$s[2]]));
ANS(num_cmp($a[$s[1]][$s[2]]));
ANS(num_cmp($a[$s[2]][$s[2]]));
ANS(num_cmp($a[$s[3]][$s[2]]));
ANS(num_cmp($a[$s[0]][$s[3]]));
ANS(num_cmp($a[$s[1]][$s[3]]));
ANS(num_cmp($a[$s[2]][$s[3]]));
ANS(num_cmp($a[$s[3]][$s[3]]));

ENDDOCUMENT();       # This should be the last executable line in the problem.

