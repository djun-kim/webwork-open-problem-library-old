##DESCRIPTION
##KEYWORDS(matrices, multiplication)
##
##ENDDESCRIPTION

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGmatrixmacros.pl",
"PGnumericalmacros.pl",
"PGauxiliaryFunctions.pl",
"PGmorematrixmacros.pl",
);

TEXT(beginproblem());

$a = non_zero_random(-9,9,1);
$b = non_zero_random(-9,9,1);
$c = non_zero_random(-9,9,1);
$d = non_zero_random(-9,9,1);
$e = non_zero_random(-9,9,1);
$f = non_zero_random(-9,9,1);
$g = non_zero_random(-9,9,1);
$h = non_zero_random(-9,9,1);
$i = non_zero_random(-9,9,1);

$j = non_zero_random(-9,9,1);
$k = non_zero_random(-9,9,1);
$l = non_zero_random(-9,9,1);


$A = Matrix->new_from_array_ref([[$a,$b,$c],[$d,$e,$f],[$g,$h,$i]]);
$v = Matrix->new_from_array_ref([[$j],[$k],[$l]]);

$ans = $A * $v;

my $ae = new AnswerEvaluator;

$ae->{debug} = 0;

$ae->ans_hash( 	correct_ans 		=> 	mbox(display_matrix($A,'left'=>'.','right'=>'.'),display_matrix($v,'left'=>'.','right'=>'.')),
		'zeroLevelTol'		=>	$main::functZeroLevelTolDefault,
	       	'debug'			=>	0,
);

$ae->install_pre_filter(~~&ans_array_filter);

$ae->install_evaluator(sub{
	my $rh_ans = shift;
	if( abs($A - Matrix->new_from_array_ref($rh_ans->{ra_student_ans}->[0])) < $rh_ans->{zeroLevelTol} && abs($v - Matrix->new_from_array_ref($rh_ans->{ra_student_ans}->[1])) < $rh_ans->{zeroLevelTol} ){
			$rh_ans->{score}=1;
	}
	$rh_ans;
});

$ae->install_post_filter(sub{
	my $rh_ans = shift;
	$rh_ans->clear_error('EVAL');
	$rh_ans->clear_error('SYNTAX');
	$rh_ans;
});

BEGIN_TEXT
\{"\($a x + $b y + $c z = $j \)"\}$BR
\{"\($d x + $e y + $f z = $k \)"\}$BR
\{"\($g x + $h y + $i z = $l \)"\}$BR
Write the above system of equations in matrix form: $BR
\{mbox( ans_array( 3, 3, 3 ), '\(*\)', display_matrix( [['x'],['y'],['z']] ), '\(=\)', ans_array_extension( 3, 1, 3 ) )\}$BR
END_TEXT

ANS($ae);



ENDDOCUMENT();       # This should be the last executable line in the problem.

