##DESCRIPTION
##KEYWORDS('limits', 'laws')
##  evaluate a limit and determine what laws were used
##  in this case use additions/substraction, power and
##  product laws
##ENDDESCRIPTION

##KEYWORDS('Calculus')
##Tagged by ynw2d

##DBsubject('Calculus')
##DBchapter('Limits and Derivatives')
##DBsection('Calculating Limits Using the Limit Laws')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros("PG.pl", "PGbasicmacros.pl", "PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl");

TEXT(beginproblem());
$showPartialCorrectAnswers=1;

$a=non_zero_random(-2, 2);
##make sure $b is not 1
$b=1;
while ($b==1) {
    $b=non_zero_random(-5, 5);
}
$limit=non_zero_random(-2, 2);
$power=random(4, 7);

TEXT(EV2(
"Evaluate
\[ \lim_{x \rightarrow $limit}
(x + $a)^{$power} ($b x^2) .\]", ans_rule(15),
"$BR Enter the letters
corresponding to the Limit Laws that you used to find this limit: $BR ",
ans_rule(10)
));

@limit_laws=(
"Sum Law",
"Difference Law",
"Constant Multiple Law",
"Product Law",
"Quotient Law",
"Power Law",
"Root Law"
);

@mix=shuffle(scalar(@limit_laws));
@invert_mix= invert(@mix);

TEXT(EV2(
"$BR Limit Laws", OL(@limit_laws[@mix])
));

$answer1=((($limit)+$a)**$power)*$b*$limit**2;

if ($a<0) {
    @slice=@invert_mix[1,2,3,5];
} else {
    @slice=@invert_mix[0,2,3,5];
}
#print @slice;

#print @ALPHABET[@slice];

$answer2=join "", @ALPHABET[@slice];
ANS(num_cmp($answer1));
ANS(str_cmp($answer2, filters=>["remove_whitespace","ignore_order","ignore_case"]));

ENDDOCUMENT();        # This should be the last executable line in the problem.

#sub mult_choice2 {
#     my $correctAnswer = shift @_;
#     my $normalizedCorrectAnswer = $correctAnswer;
#
#       $normalizedCorrectAnswer=~ tr/a-z/A-Z/;  # convert to uppercase
#       $normalizedCorrectAnswer = join("",sort split(/~~s*/,$normalizedCorrectAnswer));
#
#       my $answer_evaluator = sub {
#               my $in = shift @_;
#               my $formattedSubmittedAnswer = $in;
#               $formattedSubmittedAnswer=~ tr/a-z/A-Z/;  # convert to uppercase
#                       $formattedSubmittedAnswer = join("",sort split(/~~s*/,$formattedSubmittedAnswer));
#                       my $correctQ = ($formattedSubmittedAnswer eq $normalizedCorrectAnswer) ? 1: 0;
#
#                my $PGanswerMessage = "";
#               ($correctQ,$normalizedCorrectAnswer,$formattedSubmittedAnswer,$PGanswerMessage);
#
#               };
#            $answer_evaluator;
#
#   }
