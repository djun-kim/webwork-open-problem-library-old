## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS ('linear algebra','matrix','symmetric','eigenvalue','eigenvector')
## Tagged by cmd6a 5/3/06

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Eigenvalues')
## Date('')
## Author('')
## Institution('Rochester')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGmatrixmacros.pl", 
"PGnumericalmacros.pl",
"PGauxiliaryFunctions.pl",
"PGmorematrixmacros.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$case = random(5,10,5);

$U = new Matrix(2,2);

if ($case==5) {
	$u[1][1] = random(1,2,1);
	$u[2][1] = 3 - $u[1][1];
} else {
        $u[1][1] = random(1,3,2);
        $u[2][1] = 4 - $u[1][1];  
}

$u[1][1] = $u[1][1] * random(-1,1,2);
$u[2][1] = $u[2][1] * random(-1,1,2);
$u[1][2] = - $u[2][1]; 
$u[2][2] = $u[1][1]; 
$U -> assign(1,1,$u[1][1]);
$U -> assign(1,2,$u[1][2]);
$U -> assign(2,1,$u[2][1]);
$U -> assign(2,2,$u[2][2]);

$eig1 = $case * non_zero_random(-5,-1,1) * random(0,1,1);
if ($eig1 == 0) { 
	$eig2 = $case * non_zero_random(1,5,1);
} else { 
	$eig2 = 0;
}

$E = new Matrix(2,2);
$E -> assign(1,1,$eig1);
$E -> assign(1,2,0);
$E -> assign(2,1,0);
$E -> assign(2,2,$eig2);

$U_lr = $U->decompose_LR();
$I = $U_lr->invert_LR();

$A = $U * $E * $I;

BEGIN_TEXT

Find the eigenvalues and associated unit eigenvectors of the (symmetric) matrix 
$BR
\{ mbox( '\(A=\)', display_matrix($A), '.' ) \} 
$BR
\{ mbox( 'smaller eigenvalue = ', ans_rule(10) , ',' ) \} 
$BR
\{mbox( 'associated unit eigenvector = ', ans_array(2,1,10), ',' ) \}
$BR
\{ mbox( 'larger eigenvalue = ', ans_rule(10), ',' ) \}
$BR
\{mbox( 'associated unit eigenvector = ', ans_array(2,1,10), '.' ) \}
$BR
The above eigenvectors form an orthonormal eigenbasis for \(A\). 

END_TEXT

ANS(num_cmp($eig1));
ANS(basis_cmp([[$u[1][1]/sqrt($case), $u[2][1]/sqrt($case)]], 'mode'=>'unit', 'help'=>'verbose'));
ANS(num_cmp($eig2));
ANS(basis_cmp([[$u[1][2]/sqrt($case), $u[2][2]/sqrt($case)]], 'mode'=>'unit', 'help'=>'verbose'));

ENDDOCUMENT();       # This should be the last executable line in the problem.

