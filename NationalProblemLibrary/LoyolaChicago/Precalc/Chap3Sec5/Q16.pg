# DESCRIPTION
# Problem from Functions Modeling Change, Connally et al., 3rd ed.
# WeBWorK problem written by Adam Spiegler, <aspiegler@luc.edu>
# ENDDESCRIPTION

## DBsubject('Precalculus')
## DBchapter('Exponential Functions')
## DBsection('Compound Interest')
## KEYWORDS('exponential functions','compound interest','effective rate','nominal rate','continuous exponential growth')
## TitleText1('Functions Modeling Change')
## EditionText1('3')
## AuthorText1('Connally')
## Section1('3.5')
## Problem1('16')
## Author('Adam Spiegler')
## Institution('Loyola University Chicago')

DOCUMENT();       

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGgraphmacros.pl",
           "extraAnswerEvaluators.pl",
           "PGauxiliaryFunctions.pl",
           "PGgraphmacros.pl"
           );
       
TEXT(beginproblem()); # standard preamble to each problem.


$showPartialCorrectAnswers = 1;

$P = random(20000,50000,10000);
$P_disp = $P/1000;
$r = random(3,7,1);
$dec = $r/100;
$i = random(0,4,1);
@year = ("four", "five", "six", "seven", "eight");
$t = $i+4;
$b[0] = 1+$r/100;
$b[1] = (1+$r/1200)**12;
$b[2] = (1+$r/36500)**365;

for ($j = 0; $j<=2; $j++) { $rd_b[$j] = round($b[$j]*100000)/100000 };

for ($j = 0; $j <= 2; $j++){
     $amt[$j] = round(($P/$b[$j]**$t)*100)/100
     };

BEGIN_TEXT
Question 16:
$BR $SPACE $BR
If you need ${DOLLAR}$P_disp,000 $year[$i] years from now, what is the minimum amount of money you need to deposit into a bank account that pays $r$PERCENT annual interest, compounded:
$BR
$SPACE
$BR
a) annually? $DOLLAR \{ ans_rule(20) \}
$BR
b) monthly? $DOLLAR \{ ans_rule(20) \}
$BR
c) daily (assuming 365 days in a year)? $DOLLAR \{ ans_rule(20) \}

END_TEXT

ANS( num_cmp($amt[0],tol=>1) );
ANS( num_cmp($amt[1],tol=>1) );
ANS( num_cmp($amt[2],tol=>1) );


SOLUTION(EV3(<<'END_SOLUTION'));
$BR $SPACE $BR 
$BBOLD  SOLUTION $EBOLD
$BR 
a) Let $BITALIC x $EITALIC be the amount of money you will need. Then, at $r${PERCENT} interest, compounded annually, after $year[$i] years you will have the following dollar amount: $BR
$SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE 
\( x \left( 1+ $dec \right)^$t = x ($rd_b[0] )^$t \) $BR
If this needs to equal ${DOLLAR}$P_disp,000, then we have $BR
$SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE 
\( x($rd_b[0])^$t = $P \) $BR
$SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE 
\( x = \frac{$P}{($rd_b[0])^$t} \approx $amt[0] \) dollars.
$BR $SPACE $BR
b) Let $BITALIC x $EITALIC be the amount of money you will need. Then, at $r${PERCENT} interest, compounded monthly, after $year[$i] years you will have the following dollar amount: $BR
$SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE 
\( x \left( 1+ \frac{$dec}{12} \right)^{12($t)} = x ($rd_b[1] )^$t \) $BR
If this needs to equal ${DOLLAR}$P_disp,000, then we have $BR
$SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE 
\( x($_rd_b[1])^$t = $P \) $BR
$SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE 
\( x = \frac{$P}{(rd_$b[1])^$t} \approx $amt[1] \) dollars.
$BR $SPACE $BR
c) Let $BITALIC x $EITALIC be the amount of money you will need. Then, at $r${PERCENT} interest, compounded daily, after $year[$i] years you will have the following dollar amount: $BR
$SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE 
\( x \left( 1+ \frac{$dec}{365} \right)^{365($t)} = x ($rd_b[2] )^$t \) $BR
If this needs to equal ${DOLLAR}$P_disp,000, then we have $BR
$SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE 
\( x($rd_b[2])^$t = $P \) $BR
$SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE $SPACE 
\( x = \frac{$P}{($rd_b[2])^$t} \approx $amt[2] \) dollars.
$BR $SPACE $BR
The effective yield on an account increases with the number of times of compounding.  So, as the number of times increases, the amount of money you need to begin with in order to end up with ${DOLLAR}$P_disp,000 in $t years decreases.
$BR
END_SOLUTION

ENDDOCUMENT();   # This should be the last executable line in the problem.