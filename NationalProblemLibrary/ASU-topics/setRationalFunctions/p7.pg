## DESCRIPTION
## Rational Functions
## ENDDESCRIPTION

## KEYWORDS('Algebra' 'Rational Functions')
## Tagged by tda2d

## DBsubject('Algebra')
## DBchapter('Polynomial and Rational Functions')
## DBsection('Rational Functions')
## Date('')
## Author('')
## Institution('ASU')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

#
# First comes some stuff that appears at the beginning of every problem
#

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"PGasu.pl"
);

TEXT(&beginproblem);

#
# Now we do the randomization of variables, and other computations
# as needed for this problem.  Sometimes we compute the answers here.
#

$a = random(60000,80000,100);
 
$ans1 = (($a*20)/(100-20));
$ans2 = (($a*50)/(100-50));
$ans3 = (($a*95)/(100-95));
$ans4 = (0);
$ans5 = (99);


#
# Now the problem text itself, with ans_rule's to indicate where the
# answers go.  You can stop entering text, do more computations, and then
# start up again if you want.
#

BEGIN_TEXT
The cost in dollars for removing \( p \) percent of pollutants from a river in Smith County is 
\[ C(p) = \frac{$a p}{100 - p} . \] 

Graph this function on your calculator.
	$PAR
Find the cost of removing 20%.  
$PAR
 Cost for removing 20%, in dollars, is  \{ans_rule(40)\}
$PAR
Find the cost of removing half of the pollutants.
$PAR
 Cost for removing half, in dollars, is  \{ans_rule(40)\}
$PAR
Find the cost of removing all but 5% of the pollutants.
$PAR
Cost for removing all but 5%, in dollars, is  \{ans_rule(40)\}
$PAR
What is the smallest value \( p \) can be?
$PAR
The smallest value \( p \) can be is \{ans_rule(40)\} 
$PAR
What is the largest integer value \( p \) can be?
$PAR
The largest integer value \( p \) can be is \{ans_rule(40)\} 

END_TEXT

&ANS(std_num_cmp($ans1));
&ANS(std_num_cmp($ans2));
&ANS(std_num_cmp($ans3));
&ANS(std_num_cmp($ans4));
&ANS(std_num_cmp($ans5));

ENDDOCUMENT();        # This should be the last executable line in the problem.

