#DESCRIPTION
#KEYWORDS('second derivative', 'inflection point')
#  Intervals of concave up/down and inflection points
#ENDDESCRIPTION

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGanswermacros.pl",
           "PGauxiliaryFunctions.pl",
           "extraAnswerEvaluators.pl"
); 

$a = random(7,12,1);
$b = random(2,6,1);

TEXT(beginproblem());

$showPartialCorrectAnswers = 1;

BEGIN_TEXT

Suppose that
\( f(x) = $a - $b e^x \).
$PAR

(A) List all the critical values of \(f(x)\). 
Note: If there are no critical values, enter 'NONE'.
$BR
\{ans_rule(50)\}
$PAR

(B) Use interval notation to indicate where \(f(x)\) is increasing.
$BR
$BBOLD Note: $EBOLD  Use 'INF' for \(\infty\), '-INF' for \(-\infty\), 
and use 'U' for the union symbol. Leave an answer blank if there is no interval.
$BR
Increasing: \{ans_rule(50)\}
$PAR

(C) Use interval notation to indicate where \(f(x)\) is decreasing.
$BR
Decreasing: \{ans_rule(50)\}
$PAR

(D) List the \(x\) values of all local maxima of
\(f(x)\). If there are no local maxima, enter 'NONE'.
$BR
\(x\) values of local maximums = \{ans_rule(30)\}
$PAR


(E) List the \(x\) values of all local minima of
\(f(x)\). If there are no local minima, enter 'NONE'.
$BR
\(x\) values of local minimums = \{ans_rule(30)\}
$PAR


(F) Use interval notation to indicate where \( f(x) \) is concave up.
$BR
Concave up: \{ans_rule(50)\}
$PAR

(G) Use interval notation to indicate where \( f(x) \) is concave down.
$BR
Concave down: \{ans_rule(50)\}
$PAR

(H) List the \(x\) values of all the inflection points of
\(f\). If there are no inflection points, enter 'NONE'.
$BR
\(x\) values of inflection points = \{ans_rule(30)\}
$PAR

(I) Use all of the preceding information to sketch a
graph of \(f\).  Include all vertical and/or horizontal asymptotes.  When you're finished, enter a "1" in the box
below.
$BR \{ans_rule(10)\}

END_TEXT

ANS( number_list_cmp( "none" , strings=>["none"] ));
ANS( interval_cmp(" "));
ANS( interval_cmp("(-INF, INF)"));
ANS( number_list_cmp( "none" , strings=>["none"] ));
ANS( number_list_cmp( "none" , strings=>["none"] ));
ANS( interval_cmp(" "));
ANS( interval_cmp("(-INF,INF)"));
ANS( number_list_cmp( "none" , strings=>["none"] ));
ANS(num_cmp(1));


ENDDOCUMENT();        # This should be the last executable line in the problem.
