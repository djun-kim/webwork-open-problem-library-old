#DESCRIPTION
#KEYWORDS('algebara', 'equations', 'domain')
#  Find the domain of a function root(a-bx)
#ENDDESCRIPTION

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGauxiliaryFunctions.pl",
		"extraAnswerEvaluators.pl");

$a = random(3,5,1);
$b = random(200,300,5);
$c = random(3000,4000,100);
$d = random(15000,20000,1000);

TEXT(beginproblem());

$showPartialCorrectAnswers = 1;

TEXT(EV2(<<EOT));
A company estimates that it will sell \(N(x)\) units of a product
after spending \(x\) thousand dollars on advertising, as given by
\[ N(x) = -$a x^3 + $b x^2 - $c x + $d, \qquad 10 \leq x \leq 40.  \]
$BR
(A) Use interval notation to indicate when the rate of change
of sales \( N'(x) \) is increasing.
$PAR
$PAR
{\bf Note:} When using interval notation in WeBWorK, remember
that:
\begin{itemize}
\item You use 'I' for \(\infty\) and '-I' for \(-\infty\).
\item 'U' for the union symbol.
\item If you have extra boxes, fill each in with an 'x'.
\end{itemize}

\( N'(x) \) increasing:
$BR
\{ans_rule(25)\}
$PAR
$PAR
EOT

@answers = (interval_cmp("(10,$b/(3*$a))"));

ANS( @answers );

TEXT(EV2(<<EOT));
$BR
(B) Use interval notation to indicate when the rate of change
of sales \( N'(x) \) is decreasing.
$PAR
\( N'(x) \) decreasing:
$BR
\{ans_rule(25)\}
$PAR
$PAR
EOT

@answers = (interval_cmp("($b/(3*$a),40)"));

ANS( @answers );

TEXT(EV2(<<EOT));
(C) Find the average of the \(x\) values of all inflection points of
\(N(x)\).
$BR
Note: If there are no inflection points, enter -1000.
$PAR
Average of inflection points = \{ans_rule(20)\}
$PAR

(D) Find the maximum rate of change of sales.
$BR
$PAR
Maximum rate of change of sales = \{ans_rule(20)\}
$PAR
$BR

EOT

@answers = (std_num_cmp($b/(3*$a)),
    std_num_cmp(-3*$a*($b/(3*$a))**2 + 2*$b*($b/(3*$a)) - $c) );

ANS( @answers );

ENDDOCUMENT();        # This should be the last executable line in the problem.
