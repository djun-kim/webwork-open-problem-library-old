#DESCRIPTION
#Polar Coordinate Conversion
#ENDDESCRIPTION

#KEYWORDS('Polar Coordinates', 'Conversion')

## DBsubject('Calculus')
## DBchapter('Parametric Equations and Polar Coordinates')
## DBsection('Polar Coordinates')
## Date('6/3/2002')
## Author('')
## Institution('')
## TitleText1('Calculus: Early Transcendentals')
## EditionText1('6')
## AuthorText1('Stewart')
## Section1('10.3')
## Problem1('5 6')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

$x1 = non_zero_random(-10,10,.1);
$x2 = non_zero_random(-10,10,.1);
$x3 = non_zero_random(-10,10,.1);
$x4 = non_zero_random(-10,10,.1);

$y1 = random(0,10,.1);
$y2 = random(1,10,.1);
$y3 = random(1,10,.1);
$y4 = random(1,10,.1);

$r1 = ($x1**2 + $y1**2)**.5 ;
$r2 = ($x2**2 + $y2**2)**.5 ;
$r3 = ($x3**2 + $y3**2)**.5 ;
$r4 = ($x4**2 + $y4**2)**.5 ;

$t1 = arctan ($y1/$x1) ;
$t2 = arctan ($y2/$x2) ;
$t3 = arctan ($y3/$x3) ;
$t4 = arctan ($y4/$x4) ;

$questStr1 = EV2( " \( ($x1 , $y1) \)");
$ansStr1 =EV2(  '\( ( \{spf($r1, "%4.4f")\} , \{spf($t1,"%4.4f") \} ) \)');

$questStr2 = EV2( " \( ($x2 , $y2) \)");
$ansStr2 =EV2(  '\( ( \{spf($r2, "%4.4f")\} , \{spf($t2,"%4.4f") \} ) \)');

$questStr3 = EV2( " \( ($x3 , $y3) \)");
$ansStr3 =EV2(  '\( ( \{spf($r3, "%4.4f")\} , \{spf($t3,"%4.4f") \} ) \)');

$questStr4 = EV2( " \( ($x4 , $y4) \)");
$ansStr4 =EV2(  '\( ( \{spf($r4, "%4.4f")\} , \{spf($t4,"%4.4f") \} ) \)');

@questions =( $questStr1,$questStr2,$questStr3,$questStr4);
@answers =( $ansStr1,$ansStr2,$ansStr3,$ansStr4);

# Now randomize the questions:
@slice = &NchooseK(4,4);
@shuffle = &shuffle(scalar(@slice));

TEXT(EV2(<<EOT));
For each set of Cartesian coordinates \( (x, y) \), match the equivalent set of Polar coordinates
\( (r,\theta ) \),  with \( -\pi \leq \theta \leq  \pi \) $BR

EOT
TEXT(
&match_questions_list(@questions[@slice]),
&OL(@answers[@slice[@shuffle]])
);
ANS(str_cmp( [ @ALPHABET[&invert(@shuffle)] ] )  );
     ##the correct answers are obtained by applying
     ##the inverse (adjoint) permutation to the captions.

ENDDOCUMENT();        # This should be the last executable line in the problem.

