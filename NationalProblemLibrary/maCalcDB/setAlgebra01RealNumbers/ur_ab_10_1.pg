##DESCRIPTION
##   A simple matching problem testing knowledge of
##   notation of intervals
##ENDDESCRIPTION

##KEYWORDS('algebra','interval')
## hcao tagged and PAID on 2-20-2004

## DBchapter('Basic Algebra')
## DBsection('Real Numbers')
## Date('6/3/2002')
## Author('')
## Institution('')
## TitleText1('College Algebra')
## EditionText1('3')
## AuthorText1('Stewart, Redlin, Watson')
## Section1('1.2')
## Problem1('33 34 31 30')
DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(&beginproblem);
$showPartialCorrectAnswers = 0;

$c =random(1,5,1);
$d =random(6,10,1);

$questStr1 =EV2( " \( ($c,$d) \)");
$ansStr1 = EV2(" \(\lbrace x | $c \lt x \lt $d \rbrace \)");
$questStr2 = EV2(" \( [$c,$d) \) ");
$ansStr2 =EV2(" \( \lbrace x | $c \leq x \lt $d $RB \)");
$questStr3 = EV2(" \( ($c,$d] \) ");
$ansStr3 = EV2(" \( \lbrace x | $c \lt x \leq $d $RB \)");
$questStr4 =EV2(" \( [$c,$d]\) ");
$ansStr4 = EV2(" \( \lbrace x | $c \leq x \leq $d $RB \)");
$questStr5 = EV2(" \( ($c,\infty)\) ");
$ansStr5 = EV2(" \( \lbrace x | x \gt $c  $RB \)");
$questStr6 = EV2(" \( [$c,\infty)\) ");
$ansStr6 = EV2(" \( \lbrace x | $c \leq x  $RB \)");
$questStr7 = EV2(" \( (-\infty, $c)\) ");
$ansStr7 = EV2(" \( \lbrace x | x \lt $c $RB \)");
$questStr8 = EV2(" \( (-\infty, $c] \) ");
$ansStr8 = EV2(" \( \lbrace x | x \leq $c $RB \)");

@questions =( $questStr1,$questStr2,$questStr3,$questStr4,$questStr5,$questStr6,$questStr7,$questStr8);
@answers =( $ansStr1,$ansStr2,$ansStr3,$ansStr4,$ansStr5,$ansStr6,$ansStr7,$ansStr8);

# Now randomize the questions:
@slice = &NchooseK(8,5);
@shuffle = &shuffle(scalar(@slice));
################################################################################
TEXT(EV2(<<EOT));
Match each interval below with set-builder notation for the same interval.$BR
$BR
EOT
TEXT(
&match_questions_list(@questions[@slice]),
&OL(@answers[@slice[@shuffle]])
);

&ANS(std_str_cmp_list(@ALPHABET[&invert(@shuffle)]));
     ##the correct answers are obtained by applying
     ##the inverse (adjoint) permutation to the captions.

ENDDOCUMENT();        # This should be the last executable line in the problem.

